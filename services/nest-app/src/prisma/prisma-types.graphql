# source: http://localhost:4466
# timestamp: Mon Oct 14 2019 15:47:19 GMT-0400 (Eastern Daylight Time)

type AggregateAppKey {
  count: Int!
}

type AggregateGame {
  count: Int!
}

type AggregateGitHubBranch {
  count: Int!
}

type AggregateGitHubComment {
  count: Int!
}

type AggregateGitHubCommit {
  count: Int!
}

type AggregateGitHubFileDiff {
  count: Int!
}

type AggregateGitHubIssue {
  count: Int!
}

type AggregateGitHubLabel {
  count: Int!
}

type AggregateGitHubPullRequest {
  count: Int!
}

type AggregateGitHubPullRequestReview {
  count: Int!
}

type AggregateGitHubRepository {
  count: Int!
}

type AggregateGitHubReviewRequest {
  count: Int!
}

type AggregateGitHubReviewThread {
  count: Int!
}

type AggregateGitHubTopic {
  count: Int!
}

type AggregateGitHubUser {
  count: Int!
}

type AggregateGitHubWebhookEvent {
  count: Int!
}

type AggregateRepository {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type AppKey implements Node {
  id: ID!
  user: User!
  key: String!
  name: String
  repositories(
    where: RepositoryWhereInput
    orderBy: RepositoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Repository!]
}

"""
A connection to a list of items.
"""
type AppKeyConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [AppKeyEdge]!
  aggregate: AggregateAppKey!
}

input AppKeyCreateInput {
  id: ID
  key: String!
  name: String
  user: UserCreateOneWithoutKeysInput!
  repositories: RepositoryCreateManyWithoutAppKeyInput
}

input AppKeyCreateManyWithoutUserInput {
  create: [AppKeyCreateWithoutUserInput!]
  connect: [AppKeyWhereUniqueInput!]
}

input AppKeyCreateOneWithoutRepositoriesInput {
  create: AppKeyCreateWithoutRepositoriesInput
  connect: AppKeyWhereUniqueInput
}

input AppKeyCreateWithoutRepositoriesInput {
  id: ID
  key: String!
  name: String
  user: UserCreateOneWithoutKeysInput!
}

input AppKeyCreateWithoutUserInput {
  id: ID
  key: String!
  name: String
  repositories: RepositoryCreateManyWithoutAppKeyInput
}

"""
An edge in a connection.
"""
type AppKeyEdge {
  """
  The item at the end of the edge.
  """
  node: AppKey!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum AppKeyOrderByInput {
  id_ASC
  id_DESC
  key_ASC
  key_DESC
  name_ASC
  name_DESC
}

type AppKeyPreviousValues {
  id: ID!
  key: String!
  name: String
}

input AppKeyScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AppKeyScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AppKeyScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AppKeyScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  key: String

  """
  All values that are not equal to given value.
  """
  key_not: String

  """
  All values that are contained in given list.
  """
  key_in: [String!]

  """
  All values that are not contained in given list.
  """
  key_not_in: [String!]

  """
  All values less than the given value.
  """
  key_lt: String

  """
  All values less than or equal the given value.
  """
  key_lte: String

  """
  All values greater than the given value.
  """
  key_gt: String

  """
  All values greater than or equal the given value.
  """
  key_gte: String

  """
  All values containing the given string.
  """
  key_contains: String

  """
  All values not containing the given string.
  """
  key_not_contains: String

  """
  All values starting with the given string.
  """
  key_starts_with: String

  """
  All values not starting with the given string.
  """
  key_not_starts_with: String

  """
  All values ending with the given string.
  """
  key_ends_with: String

  """
  All values not ending with the given string.
  """
  key_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
}

type AppKeySubscriptionPayload {
  mutation: MutationType!
  node: AppKey
  updatedFields: [String!]
  previousValues: AppKeyPreviousValues
}

input AppKeySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AppKeySubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AppKeySubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AppKeySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: AppKeyWhereInput
}

input AppKeyUpdateInput {
  key: String
  name: String
  user: UserUpdateOneRequiredWithoutKeysInput
  repositories: RepositoryUpdateManyWithoutAppKeyInput
}

input AppKeyUpdateManyDataInput {
  key: String
  name: String
}

input AppKeyUpdateManyMutationInput {
  key: String
  name: String
}

input AppKeyUpdateManyWithoutUserInput {
  create: [AppKeyCreateWithoutUserInput!]
  connect: [AppKeyWhereUniqueInput!]
  set: [AppKeyWhereUniqueInput!]
  disconnect: [AppKeyWhereUniqueInput!]
  delete: [AppKeyWhereUniqueInput!]
  update: [AppKeyUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AppKeyUpdateManyWithWhereNestedInput!]
  deleteMany: [AppKeyScalarWhereInput!]
  upsert: [AppKeyUpsertWithWhereUniqueWithoutUserInput!]
}

input AppKeyUpdateManyWithWhereNestedInput {
  where: AppKeyScalarWhereInput!
  data: AppKeyUpdateManyDataInput!
}

input AppKeyUpdateOneRequiredWithoutRepositoriesInput {
  create: AppKeyCreateWithoutRepositoriesInput
  connect: AppKeyWhereUniqueInput
  update: AppKeyUpdateWithoutRepositoriesDataInput
  upsert: AppKeyUpsertWithoutRepositoriesInput
}

input AppKeyUpdateWithoutRepositoriesDataInput {
  key: String
  name: String
  user: UserUpdateOneRequiredWithoutKeysInput
}

input AppKeyUpdateWithoutUserDataInput {
  key: String
  name: String
  repositories: RepositoryUpdateManyWithoutAppKeyInput
}

input AppKeyUpdateWithWhereUniqueWithoutUserInput {
  where: AppKeyWhereUniqueInput!
  data: AppKeyUpdateWithoutUserDataInput!
}

input AppKeyUpsertWithoutRepositoriesInput {
  update: AppKeyUpdateWithoutRepositoriesDataInput!
  create: AppKeyCreateWithoutRepositoriesInput!
}

input AppKeyUpsertWithWhereUniqueWithoutUserInput {
  where: AppKeyWhereUniqueInput!
  update: AppKeyUpdateWithoutUserDataInput!
  create: AppKeyCreateWithoutUserInput!
}

input AppKeyWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [AppKeyWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [AppKeyWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [AppKeyWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  key: String

  """
  All values that are not equal to given value.
  """
  key_not: String

  """
  All values that are contained in given list.
  """
  key_in: [String!]

  """
  All values that are not contained in given list.
  """
  key_not_in: [String!]

  """
  All values less than the given value.
  """
  key_lt: String

  """
  All values less than or equal the given value.
  """
  key_lte: String

  """
  All values greater than the given value.
  """
  key_gt: String

  """
  All values greater than or equal the given value.
  """
  key_gte: String

  """
  All values containing the given string.
  """
  key_contains: String

  """
  All values not containing the given string.
  """
  key_not_contains: String

  """
  All values starting with the given string.
  """
  key_starts_with: String

  """
  All values not starting with the given string.
  """
  key_not_starts_with: String

  """
  All values ending with the given string.
  """
  key_ends_with: String

  """
  All values not ending with the given string.
  """
  key_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  user: UserWhereInput
  repositories_every: RepositoryWhereInput
  repositories_some: RepositoryWhereInput
  repositories_none: RepositoryWhereInput
}

input AppKeyWhereUniqueInput {
  id: ID
  key: String
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

scalar DateTime

type Game implements Node {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  repository: Repository!
  title: String!
  owner: User!
  type: String!
}

"""
A connection to a list of items.
"""
type GameConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GameEdge]!
  aggregate: AggregateGame!
}

input GameCreateInput {
  id: ID
  title: String!
  type: String!
  repository: RepositoryCreateOneWithoutGameInput!
  owner: UserCreateOneWithoutGamesOwnedInput!
}

input GameCreateManyWithoutOwnerInput {
  create: [GameCreateWithoutOwnerInput!]
  connect: [GameWhereUniqueInput!]
}

input GameCreateOneWithoutRepositoryInput {
  create: GameCreateWithoutRepositoryInput
  connect: GameWhereUniqueInput
}

input GameCreateWithoutOwnerInput {
  id: ID
  title: String!
  type: String!
  repository: RepositoryCreateOneWithoutGameInput!
}

input GameCreateWithoutRepositoryInput {
  id: ID
  title: String!
  type: String!
  owner: UserCreateOneWithoutGamesOwnedInput!
}

"""
An edge in a connection.
"""
type GameEdge {
  """
  The item at the end of the edge.
  """
  node: Game!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GameOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  title_ASC
  title_DESC
  type_ASC
  type_DESC
}

type GamePreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  title: String!
  type: String!
}

input GameScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GameScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GameScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GameScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  type: String

  """
  All values that are not equal to given value.
  """
  type_not: String

  """
  All values that are contained in given list.
  """
  type_in: [String!]

  """
  All values that are not contained in given list.
  """
  type_not_in: [String!]

  """
  All values less than the given value.
  """
  type_lt: String

  """
  All values less than or equal the given value.
  """
  type_lte: String

  """
  All values greater than the given value.
  """
  type_gt: String

  """
  All values greater than or equal the given value.
  """
  type_gte: String

  """
  All values containing the given string.
  """
  type_contains: String

  """
  All values not containing the given string.
  """
  type_not_contains: String

  """
  All values starting with the given string.
  """
  type_starts_with: String

  """
  All values not starting with the given string.
  """
  type_not_starts_with: String

  """
  All values ending with the given string.
  """
  type_ends_with: String

  """
  All values not ending with the given string.
  """
  type_not_ends_with: String
}

type GameSubscriptionPayload {
  mutation: MutationType!
  node: Game
  updatedFields: [String!]
  previousValues: GamePreviousValues
}

input GameSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GameSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GameSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GameSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GameWhereInput
}

input GameUpdateInput {
  title: String
  type: String
  repository: RepositoryUpdateOneRequiredWithoutGameInput
  owner: UserUpdateOneRequiredWithoutGamesOwnedInput
}

input GameUpdateManyDataInput {
  title: String
  type: String
}

input GameUpdateManyMutationInput {
  title: String
  type: String
}

input GameUpdateManyWithoutOwnerInput {
  create: [GameCreateWithoutOwnerInput!]
  connect: [GameWhereUniqueInput!]
  set: [GameWhereUniqueInput!]
  disconnect: [GameWhereUniqueInput!]
  delete: [GameWhereUniqueInput!]
  update: [GameUpdateWithWhereUniqueWithoutOwnerInput!]
  updateMany: [GameUpdateManyWithWhereNestedInput!]
  deleteMany: [GameScalarWhereInput!]
  upsert: [GameUpsertWithWhereUniqueWithoutOwnerInput!]
}

input GameUpdateManyWithWhereNestedInput {
  where: GameScalarWhereInput!
  data: GameUpdateManyDataInput!
}

input GameUpdateOneWithoutRepositoryInput {
  create: GameCreateWithoutRepositoryInput
  connect: GameWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: GameUpdateWithoutRepositoryDataInput
  upsert: GameUpsertWithoutRepositoryInput
}

input GameUpdateWithoutOwnerDataInput {
  title: String
  type: String
  repository: RepositoryUpdateOneRequiredWithoutGameInput
}

input GameUpdateWithoutRepositoryDataInput {
  title: String
  type: String
  owner: UserUpdateOneRequiredWithoutGamesOwnedInput
}

input GameUpdateWithWhereUniqueWithoutOwnerInput {
  where: GameWhereUniqueInput!
  data: GameUpdateWithoutOwnerDataInput!
}

input GameUpsertWithoutRepositoryInput {
  update: GameUpdateWithoutRepositoryDataInput!
  create: GameCreateWithoutRepositoryInput!
}

input GameUpsertWithWhereUniqueWithoutOwnerInput {
  where: GameWhereUniqueInput!
  update: GameUpdateWithoutOwnerDataInput!
  create: GameCreateWithoutOwnerInput!
}

input GameWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GameWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GameWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GameWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  type: String

  """
  All values that are not equal to given value.
  """
  type_not: String

  """
  All values that are contained in given list.
  """
  type_in: [String!]

  """
  All values that are not contained in given list.
  """
  type_not_in: [String!]

  """
  All values less than the given value.
  """
  type_lt: String

  """
  All values less than or equal the given value.
  """
  type_lte: String

  """
  All values greater than the given value.
  """
  type_gt: String

  """
  All values greater than or equal the given value.
  """
  type_gte: String

  """
  All values containing the given string.
  """
  type_contains: String

  """
  All values not containing the given string.
  """
  type_not_contains: String

  """
  All values starting with the given string.
  """
  type_starts_with: String

  """
  All values not starting with the given string.
  """
  type_not_starts_with: String

  """
  All values ending with the given string.
  """
  type_ends_with: String

  """
  All values not ending with the given string.
  """
  type_not_ends_with: String
  repository: RepositoryWhereInput
  owner: UserWhereInput
}

input GameWhereUniqueInput {
  id: ID
}

type GitHubBranch implements Node {
  id: ID!
  name: String!
  commits(
    where: GitHubCommitWhereInput
    orderBy: GitHubCommitOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubCommit!]
  pullRequest: GitHubPullRequest
  merged: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubBranchConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubBranchEdge]!
  aggregate: AggregateGitHubBranch!
}

input GitHubBranchCreateInput {
  id: ID
  name: String!
  merged: Boolean
  commits: GitHubCommitCreateManyInput
  pullRequest: GitHubPullRequestCreateOneInput
}

"""
An edge in a connection.
"""
type GitHubBranchEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubBranch!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubBranchOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  merged_ASC
  merged_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubBranchPreviousValues {
  id: ID!
  name: String!
  merged: Boolean
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GitHubBranchSubscriptionPayload {
  mutation: MutationType!
  node: GitHubBranch
  updatedFields: [String!]
  previousValues: GitHubBranchPreviousValues
}

input GitHubBranchSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubBranchSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubBranchSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubBranchSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubBranchWhereInput
}

input GitHubBranchUpdateInput {
  name: String
  merged: Boolean
  commits: GitHubCommitUpdateManyInput
  pullRequest: GitHubPullRequestUpdateOneInput
}

input GitHubBranchUpdateManyMutationInput {
  name: String
  merged: Boolean
}

input GitHubBranchWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubBranchWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubBranchWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubBranchWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  merged: Boolean

  """
  All values that are not equal to given value.
  """
  merged_not: Boolean
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  commits_every: GitHubCommitWhereInput
  commits_some: GitHubCommitWhereInput
  commits_none: GitHubCommitWhereInput
  pullRequest: GitHubPullRequestWhereInput
}

input GitHubBranchWhereUniqueInput {
  id: ID
}

type GitHubComment implements Node {
  author: GitHubUser!
  bodyText: String!
  createdAtExternal: DateTime!
  id: ID!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubCommentConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubCommentEdge]!
  aggregate: AggregateGitHubComment!
}

input GitHubCommentCreateInput {
  bodyText: String!
  createdAtExternal: DateTime!
  id: ID
  url: String!
  author: GitHubUserCreateOneInput!
}

input GitHubCommentCreateManyInput {
  create: [GitHubCommentCreateInput!]
  connect: [GitHubCommentWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubCommentEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubComment!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubCommentOrderByInput {
  bodyText_ASC
  bodyText_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubCommentPreviousValues {
  bodyText: String!
  createdAtExternal: DateTime!
  id: ID!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubCommentScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubCommentScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubCommentScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubCommentScalarWhereInput!]
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubCommentSubscriptionPayload {
  mutation: MutationType!
  node: GitHubComment
  updatedFields: [String!]
  previousValues: GitHubCommentPreviousValues
}

input GitHubCommentSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubCommentSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubCommentSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubCommentSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubCommentWhereInput
}

input GitHubCommentUpdateDataInput {
  bodyText: String
  createdAtExternal: DateTime
  url: String
  author: GitHubUserUpdateOneRequiredInput
}

input GitHubCommentUpdateInput {
  bodyText: String
  createdAtExternal: DateTime
  url: String
  author: GitHubUserUpdateOneRequiredInput
}

input GitHubCommentUpdateManyDataInput {
  bodyText: String
  createdAtExternal: DateTime
  url: String
}

input GitHubCommentUpdateManyInput {
  create: [GitHubCommentCreateInput!]
  connect: [GitHubCommentWhereUniqueInput!]
  set: [GitHubCommentWhereUniqueInput!]
  disconnect: [GitHubCommentWhereUniqueInput!]
  delete: [GitHubCommentWhereUniqueInput!]
  update: [GitHubCommentUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubCommentUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubCommentScalarWhereInput!]
  upsert: [GitHubCommentUpsertWithWhereUniqueNestedInput!]
}

input GitHubCommentUpdateManyMutationInput {
  bodyText: String
  createdAtExternal: DateTime
  url: String
}

input GitHubCommentUpdateManyWithWhereNestedInput {
  where: GitHubCommentScalarWhereInput!
  data: GitHubCommentUpdateManyDataInput!
}

input GitHubCommentUpdateWithWhereUniqueNestedInput {
  where: GitHubCommentWhereUniqueInput!
  data: GitHubCommentUpdateDataInput!
}

input GitHubCommentUpsertWithWhereUniqueNestedInput {
  where: GitHubCommentWhereUniqueInput!
  update: GitHubCommentUpdateDataInput!
  create: GitHubCommentCreateInput!
}

input GitHubCommentWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubCommentWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubCommentWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubCommentWhereInput!]
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  author: GitHubUserWhereInput
}

input GitHubCommentWhereUniqueInput {
  id: ID
}

type GitHubCommit implements Node {
  additions: Int!
  associatedPullRequests(
    where: GitHubPullRequestWhereInput
    orderBy: GitHubPullRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubPullRequest!]
  author: GitHubUser!
  authedDate: DateTime!
  changedFiles: Int!
  commitUrl: String!
  committer: GitHubUser!
  deletions: Int!
  id: ID!
  message: String!
  messageHeadline: String!
  pushedDate: DateTime!
  treeUrl: String!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubCommitConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubCommitEdge]!
  aggregate: AggregateGitHubCommit!
}

input GitHubCommitCreateInput {
  additions: Int!
  authedDate: DateTime!
  changedFiles: Int!
  commitUrl: String!
  deletions: Int!
  id: ID
  message: String!
  messageHeadline: String!
  pushedDate: DateTime!
  treeUrl: String!
  url: String!
  associatedPullRequests: GitHubPullRequestCreateManyInput
  author: GitHubUserCreateOneInput!
  committer: GitHubUserCreateOneInput!
}

input GitHubCommitCreateManyInput {
  create: [GitHubCommitCreateInput!]
  connect: [GitHubCommitWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubCommitEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubCommit!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubCommitOrderByInput {
  additions_ASC
  additions_DESC
  authedDate_ASC
  authedDate_DESC
  changedFiles_ASC
  changedFiles_DESC
  commitUrl_ASC
  commitUrl_DESC
  deletions_ASC
  deletions_DESC
  id_ASC
  id_DESC
  message_ASC
  message_DESC
  messageHeadline_ASC
  messageHeadline_DESC
  pushedDate_ASC
  pushedDate_DESC
  treeUrl_ASC
  treeUrl_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubCommitPreviousValues {
  additions: Int!
  authedDate: DateTime!
  changedFiles: Int!
  commitUrl: String!
  deletions: Int!
  id: ID!
  message: String!
  messageHeadline: String!
  pushedDate: DateTime!
  treeUrl: String!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubCommitScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubCommitScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubCommitScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubCommitScalarWhereInput!]
  additions: Int

  """
  All values that are not equal to given value.
  """
  additions_not: Int

  """
  All values that are contained in given list.
  """
  additions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  additions_not_in: [Int!]

  """
  All values less than the given value.
  """
  additions_lt: Int

  """
  All values less than or equal the given value.
  """
  additions_lte: Int

  """
  All values greater than the given value.
  """
  additions_gt: Int

  """
  All values greater than or equal the given value.
  """
  additions_gte: Int
  authedDate: DateTime

  """
  All values that are not equal to given value.
  """
  authedDate_not: DateTime

  """
  All values that are contained in given list.
  """
  authedDate_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  authedDate_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  authedDate_lt: DateTime

  """
  All values less than or equal the given value.
  """
  authedDate_lte: DateTime

  """
  All values greater than the given value.
  """
  authedDate_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  authedDate_gte: DateTime
  changedFiles: Int

  """
  All values that are not equal to given value.
  """
  changedFiles_not: Int

  """
  All values that are contained in given list.
  """
  changedFiles_in: [Int!]

  """
  All values that are not contained in given list.
  """
  changedFiles_not_in: [Int!]

  """
  All values less than the given value.
  """
  changedFiles_lt: Int

  """
  All values less than or equal the given value.
  """
  changedFiles_lte: Int

  """
  All values greater than the given value.
  """
  changedFiles_gt: Int

  """
  All values greater than or equal the given value.
  """
  changedFiles_gte: Int
  commitUrl: String

  """
  All values that are not equal to given value.
  """
  commitUrl_not: String

  """
  All values that are contained in given list.
  """
  commitUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  commitUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  commitUrl_lt: String

  """
  All values less than or equal the given value.
  """
  commitUrl_lte: String

  """
  All values greater than the given value.
  """
  commitUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  commitUrl_gte: String

  """
  All values containing the given string.
  """
  commitUrl_contains: String

  """
  All values not containing the given string.
  """
  commitUrl_not_contains: String

  """
  All values starting with the given string.
  """
  commitUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  commitUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  commitUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  commitUrl_not_ends_with: String
  deletions: Int

  """
  All values that are not equal to given value.
  """
  deletions_not: Int

  """
  All values that are contained in given list.
  """
  deletions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  deletions_not_in: [Int!]

  """
  All values less than the given value.
  """
  deletions_lt: Int

  """
  All values less than or equal the given value.
  """
  deletions_lte: Int

  """
  All values greater than the given value.
  """
  deletions_gt: Int

  """
  All values greater than or equal the given value.
  """
  deletions_gte: Int
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  message: String

  """
  All values that are not equal to given value.
  """
  message_not: String

  """
  All values that are contained in given list.
  """
  message_in: [String!]

  """
  All values that are not contained in given list.
  """
  message_not_in: [String!]

  """
  All values less than the given value.
  """
  message_lt: String

  """
  All values less than or equal the given value.
  """
  message_lte: String

  """
  All values greater than the given value.
  """
  message_gt: String

  """
  All values greater than or equal the given value.
  """
  message_gte: String

  """
  All values containing the given string.
  """
  message_contains: String

  """
  All values not containing the given string.
  """
  message_not_contains: String

  """
  All values starting with the given string.
  """
  message_starts_with: String

  """
  All values not starting with the given string.
  """
  message_not_starts_with: String

  """
  All values ending with the given string.
  """
  message_ends_with: String

  """
  All values not ending with the given string.
  """
  message_not_ends_with: String
  messageHeadline: String

  """
  All values that are not equal to given value.
  """
  messageHeadline_not: String

  """
  All values that are contained in given list.
  """
  messageHeadline_in: [String!]

  """
  All values that are not contained in given list.
  """
  messageHeadline_not_in: [String!]

  """
  All values less than the given value.
  """
  messageHeadline_lt: String

  """
  All values less than or equal the given value.
  """
  messageHeadline_lte: String

  """
  All values greater than the given value.
  """
  messageHeadline_gt: String

  """
  All values greater than or equal the given value.
  """
  messageHeadline_gte: String

  """
  All values containing the given string.
  """
  messageHeadline_contains: String

  """
  All values not containing the given string.
  """
  messageHeadline_not_contains: String

  """
  All values starting with the given string.
  """
  messageHeadline_starts_with: String

  """
  All values not starting with the given string.
  """
  messageHeadline_not_starts_with: String

  """
  All values ending with the given string.
  """
  messageHeadline_ends_with: String

  """
  All values not ending with the given string.
  """
  messageHeadline_not_ends_with: String
  pushedDate: DateTime

  """
  All values that are not equal to given value.
  """
  pushedDate_not: DateTime

  """
  All values that are contained in given list.
  """
  pushedDate_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  pushedDate_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  pushedDate_lt: DateTime

  """
  All values less than or equal the given value.
  """
  pushedDate_lte: DateTime

  """
  All values greater than the given value.
  """
  pushedDate_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  pushedDate_gte: DateTime
  treeUrl: String

  """
  All values that are not equal to given value.
  """
  treeUrl_not: String

  """
  All values that are contained in given list.
  """
  treeUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  treeUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  treeUrl_lt: String

  """
  All values less than or equal the given value.
  """
  treeUrl_lte: String

  """
  All values greater than the given value.
  """
  treeUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  treeUrl_gte: String

  """
  All values containing the given string.
  """
  treeUrl_contains: String

  """
  All values not containing the given string.
  """
  treeUrl_not_contains: String

  """
  All values starting with the given string.
  """
  treeUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  treeUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  treeUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  treeUrl_not_ends_with: String
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubCommitSubscriptionPayload {
  mutation: MutationType!
  node: GitHubCommit
  updatedFields: [String!]
  previousValues: GitHubCommitPreviousValues
}

input GitHubCommitSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubCommitSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubCommitSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubCommitSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubCommitWhereInput
}

input GitHubCommitUpdateDataInput {
  additions: Int
  authedDate: DateTime
  changedFiles: Int
  commitUrl: String
  deletions: Int
  message: String
  messageHeadline: String
  pushedDate: DateTime
  treeUrl: String
  url: String
  associatedPullRequests: GitHubPullRequestUpdateManyInput
  author: GitHubUserUpdateOneRequiredInput
  committer: GitHubUserUpdateOneRequiredInput
}

input GitHubCommitUpdateInput {
  additions: Int
  authedDate: DateTime
  changedFiles: Int
  commitUrl: String
  deletions: Int
  message: String
  messageHeadline: String
  pushedDate: DateTime
  treeUrl: String
  url: String
  associatedPullRequests: GitHubPullRequestUpdateManyInput
  author: GitHubUserUpdateOneRequiredInput
  committer: GitHubUserUpdateOneRequiredInput
}

input GitHubCommitUpdateManyDataInput {
  additions: Int
  authedDate: DateTime
  changedFiles: Int
  commitUrl: String
  deletions: Int
  message: String
  messageHeadline: String
  pushedDate: DateTime
  treeUrl: String
  url: String
}

input GitHubCommitUpdateManyInput {
  create: [GitHubCommitCreateInput!]
  connect: [GitHubCommitWhereUniqueInput!]
  set: [GitHubCommitWhereUniqueInput!]
  disconnect: [GitHubCommitWhereUniqueInput!]
  delete: [GitHubCommitWhereUniqueInput!]
  update: [GitHubCommitUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubCommitUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubCommitScalarWhereInput!]
  upsert: [GitHubCommitUpsertWithWhereUniqueNestedInput!]
}

input GitHubCommitUpdateManyMutationInput {
  additions: Int
  authedDate: DateTime
  changedFiles: Int
  commitUrl: String
  deletions: Int
  message: String
  messageHeadline: String
  pushedDate: DateTime
  treeUrl: String
  url: String
}

input GitHubCommitUpdateManyWithWhereNestedInput {
  where: GitHubCommitScalarWhereInput!
  data: GitHubCommitUpdateManyDataInput!
}

input GitHubCommitUpdateWithWhereUniqueNestedInput {
  where: GitHubCommitWhereUniqueInput!
  data: GitHubCommitUpdateDataInput!
}

input GitHubCommitUpsertWithWhereUniqueNestedInput {
  where: GitHubCommitWhereUniqueInput!
  update: GitHubCommitUpdateDataInput!
  create: GitHubCommitCreateInput!
}

input GitHubCommitWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubCommitWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubCommitWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubCommitWhereInput!]
  additions: Int

  """
  All values that are not equal to given value.
  """
  additions_not: Int

  """
  All values that are contained in given list.
  """
  additions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  additions_not_in: [Int!]

  """
  All values less than the given value.
  """
  additions_lt: Int

  """
  All values less than or equal the given value.
  """
  additions_lte: Int

  """
  All values greater than the given value.
  """
  additions_gt: Int

  """
  All values greater than or equal the given value.
  """
  additions_gte: Int
  authedDate: DateTime

  """
  All values that are not equal to given value.
  """
  authedDate_not: DateTime

  """
  All values that are contained in given list.
  """
  authedDate_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  authedDate_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  authedDate_lt: DateTime

  """
  All values less than or equal the given value.
  """
  authedDate_lte: DateTime

  """
  All values greater than the given value.
  """
  authedDate_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  authedDate_gte: DateTime
  changedFiles: Int

  """
  All values that are not equal to given value.
  """
  changedFiles_not: Int

  """
  All values that are contained in given list.
  """
  changedFiles_in: [Int!]

  """
  All values that are not contained in given list.
  """
  changedFiles_not_in: [Int!]

  """
  All values less than the given value.
  """
  changedFiles_lt: Int

  """
  All values less than or equal the given value.
  """
  changedFiles_lte: Int

  """
  All values greater than the given value.
  """
  changedFiles_gt: Int

  """
  All values greater than or equal the given value.
  """
  changedFiles_gte: Int
  commitUrl: String

  """
  All values that are not equal to given value.
  """
  commitUrl_not: String

  """
  All values that are contained in given list.
  """
  commitUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  commitUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  commitUrl_lt: String

  """
  All values less than or equal the given value.
  """
  commitUrl_lte: String

  """
  All values greater than the given value.
  """
  commitUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  commitUrl_gte: String

  """
  All values containing the given string.
  """
  commitUrl_contains: String

  """
  All values not containing the given string.
  """
  commitUrl_not_contains: String

  """
  All values starting with the given string.
  """
  commitUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  commitUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  commitUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  commitUrl_not_ends_with: String
  deletions: Int

  """
  All values that are not equal to given value.
  """
  deletions_not: Int

  """
  All values that are contained in given list.
  """
  deletions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  deletions_not_in: [Int!]

  """
  All values less than the given value.
  """
  deletions_lt: Int

  """
  All values less than or equal the given value.
  """
  deletions_lte: Int

  """
  All values greater than the given value.
  """
  deletions_gt: Int

  """
  All values greater than or equal the given value.
  """
  deletions_gte: Int
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  message: String

  """
  All values that are not equal to given value.
  """
  message_not: String

  """
  All values that are contained in given list.
  """
  message_in: [String!]

  """
  All values that are not contained in given list.
  """
  message_not_in: [String!]

  """
  All values less than the given value.
  """
  message_lt: String

  """
  All values less than or equal the given value.
  """
  message_lte: String

  """
  All values greater than the given value.
  """
  message_gt: String

  """
  All values greater than or equal the given value.
  """
  message_gte: String

  """
  All values containing the given string.
  """
  message_contains: String

  """
  All values not containing the given string.
  """
  message_not_contains: String

  """
  All values starting with the given string.
  """
  message_starts_with: String

  """
  All values not starting with the given string.
  """
  message_not_starts_with: String

  """
  All values ending with the given string.
  """
  message_ends_with: String

  """
  All values not ending with the given string.
  """
  message_not_ends_with: String
  messageHeadline: String

  """
  All values that are not equal to given value.
  """
  messageHeadline_not: String

  """
  All values that are contained in given list.
  """
  messageHeadline_in: [String!]

  """
  All values that are not contained in given list.
  """
  messageHeadline_not_in: [String!]

  """
  All values less than the given value.
  """
  messageHeadline_lt: String

  """
  All values less than or equal the given value.
  """
  messageHeadline_lte: String

  """
  All values greater than the given value.
  """
  messageHeadline_gt: String

  """
  All values greater than or equal the given value.
  """
  messageHeadline_gte: String

  """
  All values containing the given string.
  """
  messageHeadline_contains: String

  """
  All values not containing the given string.
  """
  messageHeadline_not_contains: String

  """
  All values starting with the given string.
  """
  messageHeadline_starts_with: String

  """
  All values not starting with the given string.
  """
  messageHeadline_not_starts_with: String

  """
  All values ending with the given string.
  """
  messageHeadline_ends_with: String

  """
  All values not ending with the given string.
  """
  messageHeadline_not_ends_with: String
  pushedDate: DateTime

  """
  All values that are not equal to given value.
  """
  pushedDate_not: DateTime

  """
  All values that are contained in given list.
  """
  pushedDate_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  pushedDate_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  pushedDate_lt: DateTime

  """
  All values less than or equal the given value.
  """
  pushedDate_lte: DateTime

  """
  All values greater than the given value.
  """
  pushedDate_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  pushedDate_gte: DateTime
  treeUrl: String

  """
  All values that are not equal to given value.
  """
  treeUrl_not: String

  """
  All values that are contained in given list.
  """
  treeUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  treeUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  treeUrl_lt: String

  """
  All values less than or equal the given value.
  """
  treeUrl_lte: String

  """
  All values greater than the given value.
  """
  treeUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  treeUrl_gte: String

  """
  All values containing the given string.
  """
  treeUrl_contains: String

  """
  All values not containing the given string.
  """
  treeUrl_not_contains: String

  """
  All values starting with the given string.
  """
  treeUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  treeUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  treeUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  treeUrl_not_ends_with: String
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  associatedPullRequests_every: GitHubPullRequestWhereInput
  associatedPullRequests_some: GitHubPullRequestWhereInput
  associatedPullRequests_none: GitHubPullRequestWhereInput
  author: GitHubUserWhereInput
  committer: GitHubUserWhereInput
}

input GitHubCommitWhereUniqueInput {
  id: ID
}

type GitHubFileDiff implements Node {
  id: ID!
  additions: Int!
  deletions: Int!
  filepath: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubFileDiffConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubFileDiffEdge]!
  aggregate: AggregateGitHubFileDiff!
}

input GitHubFileDiffCreateInput {
  id: ID
  additions: Int!
  deletions: Int!
  filepath: String!
}

input GitHubFileDiffCreateManyInput {
  create: [GitHubFileDiffCreateInput!]
  connect: [GitHubFileDiffWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubFileDiffEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubFileDiff!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubFileDiffOrderByInput {
  id_ASC
  id_DESC
  additions_ASC
  additions_DESC
  deletions_ASC
  deletions_DESC
  filepath_ASC
  filepath_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubFileDiffPreviousValues {
  id: ID!
  additions: Int!
  deletions: Int!
  filepath: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubFileDiffScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubFileDiffScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubFileDiffScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubFileDiffScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  additions: Int

  """
  All values that are not equal to given value.
  """
  additions_not: Int

  """
  All values that are contained in given list.
  """
  additions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  additions_not_in: [Int!]

  """
  All values less than the given value.
  """
  additions_lt: Int

  """
  All values less than or equal the given value.
  """
  additions_lte: Int

  """
  All values greater than the given value.
  """
  additions_gt: Int

  """
  All values greater than or equal the given value.
  """
  additions_gte: Int
  deletions: Int

  """
  All values that are not equal to given value.
  """
  deletions_not: Int

  """
  All values that are contained in given list.
  """
  deletions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  deletions_not_in: [Int!]

  """
  All values less than the given value.
  """
  deletions_lt: Int

  """
  All values less than or equal the given value.
  """
  deletions_lte: Int

  """
  All values greater than the given value.
  """
  deletions_gt: Int

  """
  All values greater than or equal the given value.
  """
  deletions_gte: Int
  filepath: String

  """
  All values that are not equal to given value.
  """
  filepath_not: String

  """
  All values that are contained in given list.
  """
  filepath_in: [String!]

  """
  All values that are not contained in given list.
  """
  filepath_not_in: [String!]

  """
  All values less than the given value.
  """
  filepath_lt: String

  """
  All values less than or equal the given value.
  """
  filepath_lte: String

  """
  All values greater than the given value.
  """
  filepath_gt: String

  """
  All values greater than or equal the given value.
  """
  filepath_gte: String

  """
  All values containing the given string.
  """
  filepath_contains: String

  """
  All values not containing the given string.
  """
  filepath_not_contains: String

  """
  All values starting with the given string.
  """
  filepath_starts_with: String

  """
  All values not starting with the given string.
  """
  filepath_not_starts_with: String

  """
  All values ending with the given string.
  """
  filepath_ends_with: String

  """
  All values not ending with the given string.
  """
  filepath_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubFileDiffSubscriptionPayload {
  mutation: MutationType!
  node: GitHubFileDiff
  updatedFields: [String!]
  previousValues: GitHubFileDiffPreviousValues
}

input GitHubFileDiffSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubFileDiffSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubFileDiffSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubFileDiffSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubFileDiffWhereInput
}

input GitHubFileDiffUpdateDataInput {
  additions: Int
  deletions: Int
  filepath: String
}

input GitHubFileDiffUpdateInput {
  additions: Int
  deletions: Int
  filepath: String
}

input GitHubFileDiffUpdateManyDataInput {
  additions: Int
  deletions: Int
  filepath: String
}

input GitHubFileDiffUpdateManyInput {
  create: [GitHubFileDiffCreateInput!]
  connect: [GitHubFileDiffWhereUniqueInput!]
  set: [GitHubFileDiffWhereUniqueInput!]
  disconnect: [GitHubFileDiffWhereUniqueInput!]
  delete: [GitHubFileDiffWhereUniqueInput!]
  update: [GitHubFileDiffUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubFileDiffUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubFileDiffScalarWhereInput!]
  upsert: [GitHubFileDiffUpsertWithWhereUniqueNestedInput!]
}

input GitHubFileDiffUpdateManyMutationInput {
  additions: Int
  deletions: Int
  filepath: String
}

input GitHubFileDiffUpdateManyWithWhereNestedInput {
  where: GitHubFileDiffScalarWhereInput!
  data: GitHubFileDiffUpdateManyDataInput!
}

input GitHubFileDiffUpdateWithWhereUniqueNestedInput {
  where: GitHubFileDiffWhereUniqueInput!
  data: GitHubFileDiffUpdateDataInput!
}

input GitHubFileDiffUpsertWithWhereUniqueNestedInput {
  where: GitHubFileDiffWhereUniqueInput!
  update: GitHubFileDiffUpdateDataInput!
  create: GitHubFileDiffCreateInput!
}

input GitHubFileDiffWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubFileDiffWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubFileDiffWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubFileDiffWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  additions: Int

  """
  All values that are not equal to given value.
  """
  additions_not: Int

  """
  All values that are contained in given list.
  """
  additions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  additions_not_in: [Int!]

  """
  All values less than the given value.
  """
  additions_lt: Int

  """
  All values less than or equal the given value.
  """
  additions_lte: Int

  """
  All values greater than the given value.
  """
  additions_gt: Int

  """
  All values greater than or equal the given value.
  """
  additions_gte: Int
  deletions: Int

  """
  All values that are not equal to given value.
  """
  deletions_not: Int

  """
  All values that are contained in given list.
  """
  deletions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  deletions_not_in: [Int!]

  """
  All values less than the given value.
  """
  deletions_lt: Int

  """
  All values less than or equal the given value.
  """
  deletions_lte: Int

  """
  All values greater than the given value.
  """
  deletions_gt: Int

  """
  All values greater than or equal the given value.
  """
  deletions_gte: Int
  filepath: String

  """
  All values that are not equal to given value.
  """
  filepath_not: String

  """
  All values that are contained in given list.
  """
  filepath_in: [String!]

  """
  All values that are not contained in given list.
  """
  filepath_not_in: [String!]

  """
  All values less than the given value.
  """
  filepath_lt: String

  """
  All values less than or equal the given value.
  """
  filepath_lte: String

  """
  All values greater than the given value.
  """
  filepath_gt: String

  """
  All values greater than or equal the given value.
  """
  filepath_gte: String

  """
  All values containing the given string.
  """
  filepath_contains: String

  """
  All values not containing the given string.
  """
  filepath_not_contains: String

  """
  All values starting with the given string.
  """
  filepath_starts_with: String

  """
  All values not starting with the given string.
  """
  filepath_not_starts_with: String

  """
  All values ending with the given string.
  """
  filepath_ends_with: String

  """
  All values not ending with the given string.
  """
  filepath_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

input GitHubFileDiffWhereUniqueInput {
  id: ID
}

type GitHubIssue implements Node {
  id: ID!
  assignees(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  author: GitHubUser!
  bodyText: String!
  closed: DateTime
  comments(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubComment!]
  createdAtExternal: DateTime!
  labels(
    where: GitHubLabelWhereInput
    orderBy: GitHubLabelOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubLabel!]
  lastEditedAt: DateTime!
  locked: Boolean!
  number: Int!
  participants(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  state: String!
  title: String!
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubIssueConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubIssueEdge]!
  aggregate: AggregateGitHubIssue!
}

input GitHubIssueCreateInput {
  id: ID
  bodyText: String!
  closed: DateTime
  createdAtExternal: DateTime!
  lastEditedAt: DateTime!
  locked: Boolean!
  number: Int!
  state: String!
  title: String!
  updatedAtExternal: DateTime!
  url: String!
  assignees: GitHubUserCreateManyInput
  author: GitHubUserCreateOneInput!
  comments: GitHubCommentCreateManyInput
  labels: GitHubLabelCreateManyInput
  participants: GitHubUserCreateManyInput
}

input GitHubIssueCreateManyInput {
  create: [GitHubIssueCreateInput!]
  connect: [GitHubIssueWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubIssueEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubIssue!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubIssueOrderByInput {
  id_ASC
  id_DESC
  bodyText_ASC
  bodyText_DESC
  closed_ASC
  closed_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  lastEditedAt_ASC
  lastEditedAt_DESC
  locked_ASC
  locked_DESC
  number_ASC
  number_DESC
  state_ASC
  state_DESC
  title_ASC
  title_DESC
  updatedAtExternal_ASC
  updatedAtExternal_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubIssuePreviousValues {
  id: ID!
  bodyText: String!
  closed: DateTime
  createdAtExternal: DateTime!
  lastEditedAt: DateTime!
  locked: Boolean!
  number: Int!
  state: String!
  title: String!
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubIssueScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubIssueScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubIssueScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubIssueScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  closed: DateTime

  """
  All values that are not equal to given value.
  """
  closed_not: DateTime

  """
  All values that are contained in given list.
  """
  closed_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  closed_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  closed_lt: DateTime

  """
  All values less than or equal the given value.
  """
  closed_lte: DateTime

  """
  All values greater than the given value.
  """
  closed_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  closed_gte: DateTime
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  lastEditedAt: DateTime

  """
  All values that are not equal to given value.
  """
  lastEditedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  lastEditedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  lastEditedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  lastEditedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  lastEditedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  lastEditedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  lastEditedAt_gte: DateTime
  locked: Boolean

  """
  All values that are not equal to given value.
  """
  locked_not: Boolean
  number: Int

  """
  All values that are not equal to given value.
  """
  number_not: Int

  """
  All values that are contained in given list.
  """
  number_in: [Int!]

  """
  All values that are not contained in given list.
  """
  number_not_in: [Int!]

  """
  All values less than the given value.
  """
  number_lt: Int

  """
  All values less than or equal the given value.
  """
  number_lte: Int

  """
  All values greater than the given value.
  """
  number_gt: Int

  """
  All values greater than or equal the given value.
  """
  number_gte: Int
  state: String

  """
  All values that are not equal to given value.
  """
  state_not: String

  """
  All values that are contained in given list.
  """
  state_in: [String!]

  """
  All values that are not contained in given list.
  """
  state_not_in: [String!]

  """
  All values less than the given value.
  """
  state_lt: String

  """
  All values less than or equal the given value.
  """
  state_lte: String

  """
  All values greater than the given value.
  """
  state_gt: String

  """
  All values greater than or equal the given value.
  """
  state_gte: String

  """
  All values containing the given string.
  """
  state_contains: String

  """
  All values not containing the given string.
  """
  state_not_contains: String

  """
  All values starting with the given string.
  """
  state_starts_with: String

  """
  All values not starting with the given string.
  """
  state_not_starts_with: String

  """
  All values ending with the given string.
  """
  state_ends_with: String

  """
  All values not ending with the given string.
  """
  state_not_ends_with: String
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubIssueSubscriptionPayload {
  mutation: MutationType!
  node: GitHubIssue
  updatedFields: [String!]
  previousValues: GitHubIssuePreviousValues
}

input GitHubIssueSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubIssueSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubIssueSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubIssueSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubIssueWhereInput
}

input GitHubIssueUpdateDataInput {
  bodyText: String
  closed: DateTime
  createdAtExternal: DateTime
  lastEditedAt: DateTime
  locked: Boolean
  number: Int
  state: String
  title: String
  updatedAtExternal: DateTime
  url: String
  assignees: GitHubUserUpdateManyInput
  author: GitHubUserUpdateOneRequiredInput
  comments: GitHubCommentUpdateManyInput
  labels: GitHubLabelUpdateManyInput
  participants: GitHubUserUpdateManyInput
}

input GitHubIssueUpdateInput {
  bodyText: String
  closed: DateTime
  createdAtExternal: DateTime
  lastEditedAt: DateTime
  locked: Boolean
  number: Int
  state: String
  title: String
  updatedAtExternal: DateTime
  url: String
  assignees: GitHubUserUpdateManyInput
  author: GitHubUserUpdateOneRequiredInput
  comments: GitHubCommentUpdateManyInput
  labels: GitHubLabelUpdateManyInput
  participants: GitHubUserUpdateManyInput
}

input GitHubIssueUpdateManyDataInput {
  bodyText: String
  closed: DateTime
  createdAtExternal: DateTime
  lastEditedAt: DateTime
  locked: Boolean
  number: Int
  state: String
  title: String
  updatedAtExternal: DateTime
  url: String
}

input GitHubIssueUpdateManyInput {
  create: [GitHubIssueCreateInput!]
  connect: [GitHubIssueWhereUniqueInput!]
  set: [GitHubIssueWhereUniqueInput!]
  disconnect: [GitHubIssueWhereUniqueInput!]
  delete: [GitHubIssueWhereUniqueInput!]
  update: [GitHubIssueUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubIssueUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubIssueScalarWhereInput!]
  upsert: [GitHubIssueUpsertWithWhereUniqueNestedInput!]
}

input GitHubIssueUpdateManyMutationInput {
  bodyText: String
  closed: DateTime
  createdAtExternal: DateTime
  lastEditedAt: DateTime
  locked: Boolean
  number: Int
  state: String
  title: String
  updatedAtExternal: DateTime
  url: String
}

input GitHubIssueUpdateManyWithWhereNestedInput {
  where: GitHubIssueScalarWhereInput!
  data: GitHubIssueUpdateManyDataInput!
}

input GitHubIssueUpdateWithWhereUniqueNestedInput {
  where: GitHubIssueWhereUniqueInput!
  data: GitHubIssueUpdateDataInput!
}

input GitHubIssueUpsertWithWhereUniqueNestedInput {
  where: GitHubIssueWhereUniqueInput!
  update: GitHubIssueUpdateDataInput!
  create: GitHubIssueCreateInput!
}

input GitHubIssueWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubIssueWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubIssueWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubIssueWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  closed: DateTime

  """
  All values that are not equal to given value.
  """
  closed_not: DateTime

  """
  All values that are contained in given list.
  """
  closed_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  closed_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  closed_lt: DateTime

  """
  All values less than or equal the given value.
  """
  closed_lte: DateTime

  """
  All values greater than the given value.
  """
  closed_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  closed_gte: DateTime
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  lastEditedAt: DateTime

  """
  All values that are not equal to given value.
  """
  lastEditedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  lastEditedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  lastEditedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  lastEditedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  lastEditedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  lastEditedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  lastEditedAt_gte: DateTime
  locked: Boolean

  """
  All values that are not equal to given value.
  """
  locked_not: Boolean
  number: Int

  """
  All values that are not equal to given value.
  """
  number_not: Int

  """
  All values that are contained in given list.
  """
  number_in: [Int!]

  """
  All values that are not contained in given list.
  """
  number_not_in: [Int!]

  """
  All values less than the given value.
  """
  number_lt: Int

  """
  All values less than or equal the given value.
  """
  number_lte: Int

  """
  All values greater than the given value.
  """
  number_gt: Int

  """
  All values greater than or equal the given value.
  """
  number_gte: Int
  state: String

  """
  All values that are not equal to given value.
  """
  state_not: String

  """
  All values that are contained in given list.
  """
  state_in: [String!]

  """
  All values that are not contained in given list.
  """
  state_not_in: [String!]

  """
  All values less than the given value.
  """
  state_lt: String

  """
  All values less than or equal the given value.
  """
  state_lte: String

  """
  All values greater than the given value.
  """
  state_gt: String

  """
  All values greater than or equal the given value.
  """
  state_gte: String

  """
  All values containing the given string.
  """
  state_contains: String

  """
  All values not containing the given string.
  """
  state_not_contains: String

  """
  All values starting with the given string.
  """
  state_starts_with: String

  """
  All values not starting with the given string.
  """
  state_not_starts_with: String

  """
  All values ending with the given string.
  """
  state_ends_with: String

  """
  All values not ending with the given string.
  """
  state_not_ends_with: String
  title: String

  """
  All values that are not equal to given value.
  """
  title_not: String

  """
  All values that are contained in given list.
  """
  title_in: [String!]

  """
  All values that are not contained in given list.
  """
  title_not_in: [String!]

  """
  All values less than the given value.
  """
  title_lt: String

  """
  All values less than or equal the given value.
  """
  title_lte: String

  """
  All values greater than the given value.
  """
  title_gt: String

  """
  All values greater than or equal the given value.
  """
  title_gte: String

  """
  All values containing the given string.
  """
  title_contains: String

  """
  All values not containing the given string.
  """
  title_not_contains: String

  """
  All values starting with the given string.
  """
  title_starts_with: String

  """
  All values not starting with the given string.
  """
  title_not_starts_with: String

  """
  All values ending with the given string.
  """
  title_ends_with: String

  """
  All values not ending with the given string.
  """
  title_not_ends_with: String
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  assignees_every: GitHubUserWhereInput
  assignees_some: GitHubUserWhereInput
  assignees_none: GitHubUserWhereInput
  author: GitHubUserWhereInput
  comments_every: GitHubCommentWhereInput
  comments_some: GitHubCommentWhereInput
  comments_none: GitHubCommentWhereInput
  labels_every: GitHubLabelWhereInput
  labels_some: GitHubLabelWhereInput
  labels_none: GitHubLabelWhereInput
  participants_every: GitHubUserWhereInput
  participants_some: GitHubUserWhereInput
  participants_none: GitHubUserWhereInput
}

input GitHubIssueWhereUniqueInput {
  id: ID
}

type GitHubLabel implements Node {
  id: ID!
  color: String!
  createdAtExternal: DateTime!
  description: String!
  issues(
    where: GitHubIssueWhereInput
    orderBy: GitHubIssueOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubIssue!]
  name: String!
  pullRequests(
    where: GitHubPullRequestWhereInput
    orderBy: GitHubPullRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubPullRequest!]
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubLabelConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubLabelEdge]!
  aggregate: AggregateGitHubLabel!
}

input GitHubLabelCreateInput {
  id: ID
  color: String!
  createdAtExternal: DateTime!
  description: String!
  name: String!
  updatedAtExternal: DateTime!
  url: String!
  issues: GitHubIssueCreateManyInput
  pullRequests: GitHubPullRequestCreateManyInput
}

input GitHubLabelCreateManyInput {
  create: [GitHubLabelCreateInput!]
  connect: [GitHubLabelWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubLabelEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubLabel!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubLabelOrderByInput {
  id_ASC
  id_DESC
  color_ASC
  color_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  description_ASC
  description_DESC
  name_ASC
  name_DESC
  updatedAtExternal_ASC
  updatedAtExternal_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubLabelPreviousValues {
  id: ID!
  color: String!
  createdAtExternal: DateTime!
  description: String!
  name: String!
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubLabelScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubLabelScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubLabelScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubLabelScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  color: String

  """
  All values that are not equal to given value.
  """
  color_not: String

  """
  All values that are contained in given list.
  """
  color_in: [String!]

  """
  All values that are not contained in given list.
  """
  color_not_in: [String!]

  """
  All values less than the given value.
  """
  color_lt: String

  """
  All values less than or equal the given value.
  """
  color_lte: String

  """
  All values greater than the given value.
  """
  color_gt: String

  """
  All values greater than or equal the given value.
  """
  color_gte: String

  """
  All values containing the given string.
  """
  color_contains: String

  """
  All values not containing the given string.
  """
  color_not_contains: String

  """
  All values starting with the given string.
  """
  color_starts_with: String

  """
  All values not starting with the given string.
  """
  color_not_starts_with: String

  """
  All values ending with the given string.
  """
  color_ends_with: String

  """
  All values not ending with the given string.
  """
  color_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubLabelSubscriptionPayload {
  mutation: MutationType!
  node: GitHubLabel
  updatedFields: [String!]
  previousValues: GitHubLabelPreviousValues
}

input GitHubLabelSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubLabelSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubLabelSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubLabelSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubLabelWhereInput
}

input GitHubLabelUpdateDataInput {
  color: String
  createdAtExternal: DateTime
  description: String
  name: String
  updatedAtExternal: DateTime
  url: String
  issues: GitHubIssueUpdateManyInput
  pullRequests: GitHubPullRequestUpdateManyInput
}

input GitHubLabelUpdateInput {
  color: String
  createdAtExternal: DateTime
  description: String
  name: String
  updatedAtExternal: DateTime
  url: String
  issues: GitHubIssueUpdateManyInput
  pullRequests: GitHubPullRequestUpdateManyInput
}

input GitHubLabelUpdateManyDataInput {
  color: String
  createdAtExternal: DateTime
  description: String
  name: String
  updatedAtExternal: DateTime
  url: String
}

input GitHubLabelUpdateManyInput {
  create: [GitHubLabelCreateInput!]
  connect: [GitHubLabelWhereUniqueInput!]
  set: [GitHubLabelWhereUniqueInput!]
  disconnect: [GitHubLabelWhereUniqueInput!]
  delete: [GitHubLabelWhereUniqueInput!]
  update: [GitHubLabelUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubLabelUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubLabelScalarWhereInput!]
  upsert: [GitHubLabelUpsertWithWhereUniqueNestedInput!]
}

input GitHubLabelUpdateManyMutationInput {
  color: String
  createdAtExternal: DateTime
  description: String
  name: String
  updatedAtExternal: DateTime
  url: String
}

input GitHubLabelUpdateManyWithWhereNestedInput {
  where: GitHubLabelScalarWhereInput!
  data: GitHubLabelUpdateManyDataInput!
}

input GitHubLabelUpdateWithWhereUniqueNestedInput {
  where: GitHubLabelWhereUniqueInput!
  data: GitHubLabelUpdateDataInput!
}

input GitHubLabelUpsertWithWhereUniqueNestedInput {
  where: GitHubLabelWhereUniqueInput!
  update: GitHubLabelUpdateDataInput!
  create: GitHubLabelCreateInput!
}

input GitHubLabelWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubLabelWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubLabelWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubLabelWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  color: String

  """
  All values that are not equal to given value.
  """
  color_not: String

  """
  All values that are contained in given list.
  """
  color_in: [String!]

  """
  All values that are not contained in given list.
  """
  color_not_in: [String!]

  """
  All values less than the given value.
  """
  color_lt: String

  """
  All values less than or equal the given value.
  """
  color_lte: String

  """
  All values greater than the given value.
  """
  color_gt: String

  """
  All values greater than or equal the given value.
  """
  color_gte: String

  """
  All values containing the given string.
  """
  color_contains: String

  """
  All values not containing the given string.
  """
  color_not_contains: String

  """
  All values starting with the given string.
  """
  color_starts_with: String

  """
  All values not starting with the given string.
  """
  color_not_starts_with: String

  """
  All values ending with the given string.
  """
  color_ends_with: String

  """
  All values not ending with the given string.
  """
  color_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  issues_every: GitHubIssueWhereInput
  issues_some: GitHubIssueWhereInput
  issues_none: GitHubIssueWhereInput
  pullRequests_every: GitHubPullRequestWhereInput
  pullRequests_some: GitHubPullRequestWhereInput
  pullRequests_none: GitHubPullRequestWhereInput
}

input GitHubLabelWhereUniqueInput {
  id: ID
}

type GitHubPullRequest implements Node {
  additions: Int!
  assignees(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  author: GitHubUser!
  bodyText: String!
  changedFiles: Int!
  closed: Boolean!
  closedAt: DateTime
  comments(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubComment!]
  commits(
    where: GitHubCommitWhereInput
    orderBy: GitHubCommitOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubCommit!]
  createdAtExternal: DateTime!
  deletions: Int!
  files(
    where: GitHubFileDiffWhereInput
    orderBy: GitHubFileDiffOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubFileDiff!]
  id: ID!
  isCrossRepository: Boolean!
  labels(
    where: GitHubLabelWhereInput
    orderBy: GitHubLabelOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubLabel!]
  locked: Boolean!
  merged: Boolean!
  mergedAt: DateTime
  mergedBy: GitHubUser
  number: Int!
  participants(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  publishedAt: DateTime
  reviewRequests(
    where: GitHubReviewRequestWhereInput
    orderBy: GitHubReviewRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubReviewRequest!]
  reviews(
    where: GitHubPullRequestReviewWhereInput
    orderBy: GitHubPullRequestReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubPullRequestReview!]
  reviewThreads(
    where: GitHubReviewThreadWhereInput
    orderBy: GitHubReviewThreadOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubReviewThread!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubPullRequestConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubPullRequestEdge]!
  aggregate: AggregateGitHubPullRequest!
}

input GitHubPullRequestCreateInput {
  additions: Int!
  bodyText: String!
  changedFiles: Int!
  closed: Boolean!
  closedAt: DateTime
  createdAtExternal: DateTime!
  deletions: Int!
  id: ID
  isCrossRepository: Boolean!
  locked: Boolean!
  merged: Boolean!
  mergedAt: DateTime
  number: Int!
  publishedAt: DateTime
  assignees: GitHubUserCreateManyInput
  author: GitHubUserCreateOneInput!
  comments: GitHubCommentCreateManyInput
  commits: GitHubCommitCreateManyInput
  files: GitHubFileDiffCreateManyInput
  labels: GitHubLabelCreateManyInput
  mergedBy: GitHubUserCreateOneInput
  participants: GitHubUserCreateManyInput
  reviewRequests: GitHubReviewRequestCreateManyInput
  reviews: GitHubPullRequestReviewCreateManyInput
  reviewThreads: GitHubReviewThreadCreateManyInput
}

input GitHubPullRequestCreateManyInput {
  create: [GitHubPullRequestCreateInput!]
  connect: [GitHubPullRequestWhereUniqueInput!]
}

input GitHubPullRequestCreateOneInput {
  create: GitHubPullRequestCreateInput
  connect: GitHubPullRequestWhereUniqueInput
}

"""
An edge in a connection.
"""
type GitHubPullRequestEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubPullRequest!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubPullRequestOrderByInput {
  additions_ASC
  additions_DESC
  bodyText_ASC
  bodyText_DESC
  changedFiles_ASC
  changedFiles_DESC
  closed_ASC
  closed_DESC
  closedAt_ASC
  closedAt_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  deletions_ASC
  deletions_DESC
  id_ASC
  id_DESC
  isCrossRepository_ASC
  isCrossRepository_DESC
  locked_ASC
  locked_DESC
  merged_ASC
  merged_DESC
  mergedAt_ASC
  mergedAt_DESC
  number_ASC
  number_DESC
  publishedAt_ASC
  publishedAt_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubPullRequestPreviousValues {
  additions: Int!
  bodyText: String!
  changedFiles: Int!
  closed: Boolean!
  closedAt: DateTime
  createdAtExternal: DateTime!
  deletions: Int!
  id: ID!
  isCrossRepository: Boolean!
  locked: Boolean!
  merged: Boolean!
  mergedAt: DateTime
  number: Int!
  publishedAt: DateTime
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GitHubPullRequestReview implements Node {
  author: GitHubUser!
  bodyText: String!
  comments(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubComment!]
  commit(
    where: GitHubCommitWhereInput
    orderBy: GitHubCommitOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubCommit!]
  createdAtExternal: DateTime!
  id: ID!
  lastEditeddAt: DateTime!
  publishedAt: DateTime!
  pullRequest: GitHubPullRequest!
  state: String!
  submittedAt: DateTime!
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubPullRequestReviewConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubPullRequestReviewEdge]!
  aggregate: AggregateGitHubPullRequestReview!
}

input GitHubPullRequestReviewCreateInput {
  bodyText: String!
  createdAtExternal: DateTime!
  id: ID
  lastEditeddAt: DateTime!
  publishedAt: DateTime!
  state: String!
  submittedAt: DateTime!
  updatedAtExternal: DateTime!
  url: String!
  author: GitHubUserCreateOneInput!
  comments: GitHubCommentCreateManyInput
  commit: GitHubCommitCreateManyInput
  pullRequest: GitHubPullRequestCreateOneInput!
}

input GitHubPullRequestReviewCreateManyInput {
  create: [GitHubPullRequestReviewCreateInput!]
  connect: [GitHubPullRequestReviewWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubPullRequestReviewEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubPullRequestReview!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubPullRequestReviewOrderByInput {
  bodyText_ASC
  bodyText_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  id_ASC
  id_DESC
  lastEditeddAt_ASC
  lastEditeddAt_DESC
  publishedAt_ASC
  publishedAt_DESC
  state_ASC
  state_DESC
  submittedAt_ASC
  submittedAt_DESC
  updatedAtExternal_ASC
  updatedAtExternal_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubPullRequestReviewPreviousValues {
  bodyText: String!
  createdAtExternal: DateTime!
  id: ID!
  lastEditeddAt: DateTime!
  publishedAt: DateTime!
  state: String!
  submittedAt: DateTime!
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubPullRequestReviewScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubPullRequestReviewScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubPullRequestReviewScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubPullRequestReviewScalarWhereInput!]
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  lastEditeddAt: DateTime

  """
  All values that are not equal to given value.
  """
  lastEditeddAt_not: DateTime

  """
  All values that are contained in given list.
  """
  lastEditeddAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  lastEditeddAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  lastEditeddAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  lastEditeddAt_lte: DateTime

  """
  All values greater than the given value.
  """
  lastEditeddAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  lastEditeddAt_gte: DateTime
  publishedAt: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  state: String

  """
  All values that are not equal to given value.
  """
  state_not: String

  """
  All values that are contained in given list.
  """
  state_in: [String!]

  """
  All values that are not contained in given list.
  """
  state_not_in: [String!]

  """
  All values less than the given value.
  """
  state_lt: String

  """
  All values less than or equal the given value.
  """
  state_lte: String

  """
  All values greater than the given value.
  """
  state_gt: String

  """
  All values greater than or equal the given value.
  """
  state_gte: String

  """
  All values containing the given string.
  """
  state_contains: String

  """
  All values not containing the given string.
  """
  state_not_contains: String

  """
  All values starting with the given string.
  """
  state_starts_with: String

  """
  All values not starting with the given string.
  """
  state_not_starts_with: String

  """
  All values ending with the given string.
  """
  state_ends_with: String

  """
  All values not ending with the given string.
  """
  state_not_ends_with: String
  submittedAt: DateTime

  """
  All values that are not equal to given value.
  """
  submittedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  submittedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  submittedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  submittedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  submittedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  submittedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  submittedAt_gte: DateTime
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubPullRequestReviewSubscriptionPayload {
  mutation: MutationType!
  node: GitHubPullRequestReview
  updatedFields: [String!]
  previousValues: GitHubPullRequestReviewPreviousValues
}

input GitHubPullRequestReviewSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubPullRequestReviewSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubPullRequestReviewSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubPullRequestReviewSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubPullRequestReviewWhereInput
}

input GitHubPullRequestReviewUpdateDataInput {
  bodyText: String
  createdAtExternal: DateTime
  lastEditeddAt: DateTime
  publishedAt: DateTime
  state: String
  submittedAt: DateTime
  updatedAtExternal: DateTime
  url: String
  author: GitHubUserUpdateOneRequiredInput
  comments: GitHubCommentUpdateManyInput
  commit: GitHubCommitUpdateManyInput
  pullRequest: GitHubPullRequestUpdateOneRequiredInput
}

input GitHubPullRequestReviewUpdateInput {
  bodyText: String
  createdAtExternal: DateTime
  lastEditeddAt: DateTime
  publishedAt: DateTime
  state: String
  submittedAt: DateTime
  updatedAtExternal: DateTime
  url: String
  author: GitHubUserUpdateOneRequiredInput
  comments: GitHubCommentUpdateManyInput
  commit: GitHubCommitUpdateManyInput
  pullRequest: GitHubPullRequestUpdateOneRequiredInput
}

input GitHubPullRequestReviewUpdateManyDataInput {
  bodyText: String
  createdAtExternal: DateTime
  lastEditeddAt: DateTime
  publishedAt: DateTime
  state: String
  submittedAt: DateTime
  updatedAtExternal: DateTime
  url: String
}

input GitHubPullRequestReviewUpdateManyInput {
  create: [GitHubPullRequestReviewCreateInput!]
  connect: [GitHubPullRequestReviewWhereUniqueInput!]
  set: [GitHubPullRequestReviewWhereUniqueInput!]
  disconnect: [GitHubPullRequestReviewWhereUniqueInput!]
  delete: [GitHubPullRequestReviewWhereUniqueInput!]
  update: [GitHubPullRequestReviewUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubPullRequestReviewUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubPullRequestReviewScalarWhereInput!]
  upsert: [GitHubPullRequestReviewUpsertWithWhereUniqueNestedInput!]
}

input GitHubPullRequestReviewUpdateManyMutationInput {
  bodyText: String
  createdAtExternal: DateTime
  lastEditeddAt: DateTime
  publishedAt: DateTime
  state: String
  submittedAt: DateTime
  updatedAtExternal: DateTime
  url: String
}

input GitHubPullRequestReviewUpdateManyWithWhereNestedInput {
  where: GitHubPullRequestReviewScalarWhereInput!
  data: GitHubPullRequestReviewUpdateManyDataInput!
}

input GitHubPullRequestReviewUpdateWithWhereUniqueNestedInput {
  where: GitHubPullRequestReviewWhereUniqueInput!
  data: GitHubPullRequestReviewUpdateDataInput!
}

input GitHubPullRequestReviewUpsertWithWhereUniqueNestedInput {
  where: GitHubPullRequestReviewWhereUniqueInput!
  update: GitHubPullRequestReviewUpdateDataInput!
  create: GitHubPullRequestReviewCreateInput!
}

input GitHubPullRequestReviewWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubPullRequestReviewWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubPullRequestReviewWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubPullRequestReviewWhereInput!]
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  lastEditeddAt: DateTime

  """
  All values that are not equal to given value.
  """
  lastEditeddAt_not: DateTime

  """
  All values that are contained in given list.
  """
  lastEditeddAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  lastEditeddAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  lastEditeddAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  lastEditeddAt_lte: DateTime

  """
  All values greater than the given value.
  """
  lastEditeddAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  lastEditeddAt_gte: DateTime
  publishedAt: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  state: String

  """
  All values that are not equal to given value.
  """
  state_not: String

  """
  All values that are contained in given list.
  """
  state_in: [String!]

  """
  All values that are not contained in given list.
  """
  state_not_in: [String!]

  """
  All values less than the given value.
  """
  state_lt: String

  """
  All values less than or equal the given value.
  """
  state_lte: String

  """
  All values greater than the given value.
  """
  state_gt: String

  """
  All values greater than or equal the given value.
  """
  state_gte: String

  """
  All values containing the given string.
  """
  state_contains: String

  """
  All values not containing the given string.
  """
  state_not_contains: String

  """
  All values starting with the given string.
  """
  state_starts_with: String

  """
  All values not starting with the given string.
  """
  state_not_starts_with: String

  """
  All values ending with the given string.
  """
  state_ends_with: String

  """
  All values not ending with the given string.
  """
  state_not_ends_with: String
  submittedAt: DateTime

  """
  All values that are not equal to given value.
  """
  submittedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  submittedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  submittedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  submittedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  submittedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  submittedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  submittedAt_gte: DateTime
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  author: GitHubUserWhereInput
  comments_every: GitHubCommentWhereInput
  comments_some: GitHubCommentWhereInput
  comments_none: GitHubCommentWhereInput
  commit_every: GitHubCommitWhereInput
  commit_some: GitHubCommitWhereInput
  commit_none: GitHubCommitWhereInput
  pullRequest: GitHubPullRequestWhereInput
}

input GitHubPullRequestReviewWhereUniqueInput {
  id: ID
}

input GitHubPullRequestScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubPullRequestScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubPullRequestScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubPullRequestScalarWhereInput!]
  additions: Int

  """
  All values that are not equal to given value.
  """
  additions_not: Int

  """
  All values that are contained in given list.
  """
  additions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  additions_not_in: [Int!]

  """
  All values less than the given value.
  """
  additions_lt: Int

  """
  All values less than or equal the given value.
  """
  additions_lte: Int

  """
  All values greater than the given value.
  """
  additions_gt: Int

  """
  All values greater than or equal the given value.
  """
  additions_gte: Int
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  changedFiles: Int

  """
  All values that are not equal to given value.
  """
  changedFiles_not: Int

  """
  All values that are contained in given list.
  """
  changedFiles_in: [Int!]

  """
  All values that are not contained in given list.
  """
  changedFiles_not_in: [Int!]

  """
  All values less than the given value.
  """
  changedFiles_lt: Int

  """
  All values less than or equal the given value.
  """
  changedFiles_lte: Int

  """
  All values greater than the given value.
  """
  changedFiles_gt: Int

  """
  All values greater than or equal the given value.
  """
  changedFiles_gte: Int
  closed: Boolean

  """
  All values that are not equal to given value.
  """
  closed_not: Boolean
  closedAt: DateTime

  """
  All values that are not equal to given value.
  """
  closedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  closedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  closedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  closedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  closedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  closedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  closedAt_gte: DateTime
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  deletions: Int

  """
  All values that are not equal to given value.
  """
  deletions_not: Int

  """
  All values that are contained in given list.
  """
  deletions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  deletions_not_in: [Int!]

  """
  All values less than the given value.
  """
  deletions_lt: Int

  """
  All values less than or equal the given value.
  """
  deletions_lte: Int

  """
  All values greater than the given value.
  """
  deletions_gt: Int

  """
  All values greater than or equal the given value.
  """
  deletions_gte: Int
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  isCrossRepository: Boolean

  """
  All values that are not equal to given value.
  """
  isCrossRepository_not: Boolean
  locked: Boolean

  """
  All values that are not equal to given value.
  """
  locked_not: Boolean
  merged: Boolean

  """
  All values that are not equal to given value.
  """
  merged_not: Boolean
  mergedAt: DateTime

  """
  All values that are not equal to given value.
  """
  mergedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  mergedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  mergedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  mergedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  mergedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  mergedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  mergedAt_gte: DateTime
  number: Int

  """
  All values that are not equal to given value.
  """
  number_not: Int

  """
  All values that are contained in given list.
  """
  number_in: [Int!]

  """
  All values that are not contained in given list.
  """
  number_not_in: [Int!]

  """
  All values less than the given value.
  """
  number_lt: Int

  """
  All values less than or equal the given value.
  """
  number_lte: Int

  """
  All values greater than the given value.
  """
  number_gt: Int

  """
  All values greater than or equal the given value.
  """
  number_gte: Int
  publishedAt: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubPullRequestSubscriptionPayload {
  mutation: MutationType!
  node: GitHubPullRequest
  updatedFields: [String!]
  previousValues: GitHubPullRequestPreviousValues
}

input GitHubPullRequestSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubPullRequestSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubPullRequestSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubPullRequestSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubPullRequestWhereInput
}

input GitHubPullRequestUpdateDataInput {
  additions: Int
  bodyText: String
  changedFiles: Int
  closed: Boolean
  closedAt: DateTime
  createdAtExternal: DateTime
  deletions: Int
  isCrossRepository: Boolean
  locked: Boolean
  merged: Boolean
  mergedAt: DateTime
  number: Int
  publishedAt: DateTime
  assignees: GitHubUserUpdateManyInput
  author: GitHubUserUpdateOneRequiredInput
  comments: GitHubCommentUpdateManyInput
  commits: GitHubCommitUpdateManyInput
  files: GitHubFileDiffUpdateManyInput
  labels: GitHubLabelUpdateManyInput
  mergedBy: GitHubUserUpdateOneInput
  participants: GitHubUserUpdateManyInput
  reviewRequests: GitHubReviewRequestUpdateManyInput
  reviews: GitHubPullRequestReviewUpdateManyInput
  reviewThreads: GitHubReviewThreadUpdateManyInput
}

input GitHubPullRequestUpdateInput {
  additions: Int
  bodyText: String
  changedFiles: Int
  closed: Boolean
  closedAt: DateTime
  createdAtExternal: DateTime
  deletions: Int
  isCrossRepository: Boolean
  locked: Boolean
  merged: Boolean
  mergedAt: DateTime
  number: Int
  publishedAt: DateTime
  assignees: GitHubUserUpdateManyInput
  author: GitHubUserUpdateOneRequiredInput
  comments: GitHubCommentUpdateManyInput
  commits: GitHubCommitUpdateManyInput
  files: GitHubFileDiffUpdateManyInput
  labels: GitHubLabelUpdateManyInput
  mergedBy: GitHubUserUpdateOneInput
  participants: GitHubUserUpdateManyInput
  reviewRequests: GitHubReviewRequestUpdateManyInput
  reviews: GitHubPullRequestReviewUpdateManyInput
  reviewThreads: GitHubReviewThreadUpdateManyInput
}

input GitHubPullRequestUpdateManyDataInput {
  additions: Int
  bodyText: String
  changedFiles: Int
  closed: Boolean
  closedAt: DateTime
  createdAtExternal: DateTime
  deletions: Int
  isCrossRepository: Boolean
  locked: Boolean
  merged: Boolean
  mergedAt: DateTime
  number: Int
  publishedAt: DateTime
}

input GitHubPullRequestUpdateManyInput {
  create: [GitHubPullRequestCreateInput!]
  connect: [GitHubPullRequestWhereUniqueInput!]
  set: [GitHubPullRequestWhereUniqueInput!]
  disconnect: [GitHubPullRequestWhereUniqueInput!]
  delete: [GitHubPullRequestWhereUniqueInput!]
  update: [GitHubPullRequestUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubPullRequestUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubPullRequestScalarWhereInput!]
  upsert: [GitHubPullRequestUpsertWithWhereUniqueNestedInput!]
}

input GitHubPullRequestUpdateManyMutationInput {
  additions: Int
  bodyText: String
  changedFiles: Int
  closed: Boolean
  closedAt: DateTime
  createdAtExternal: DateTime
  deletions: Int
  isCrossRepository: Boolean
  locked: Boolean
  merged: Boolean
  mergedAt: DateTime
  number: Int
  publishedAt: DateTime
}

input GitHubPullRequestUpdateManyWithWhereNestedInput {
  where: GitHubPullRequestScalarWhereInput!
  data: GitHubPullRequestUpdateManyDataInput!
}

input GitHubPullRequestUpdateOneInput {
  create: GitHubPullRequestCreateInput
  connect: GitHubPullRequestWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: GitHubPullRequestUpdateDataInput
  upsert: GitHubPullRequestUpsertNestedInput
}

input GitHubPullRequestUpdateOneRequiredInput {
  create: GitHubPullRequestCreateInput
  connect: GitHubPullRequestWhereUniqueInput
  update: GitHubPullRequestUpdateDataInput
  upsert: GitHubPullRequestUpsertNestedInput
}

input GitHubPullRequestUpdateWithWhereUniqueNestedInput {
  where: GitHubPullRequestWhereUniqueInput!
  data: GitHubPullRequestUpdateDataInput!
}

input GitHubPullRequestUpsertNestedInput {
  update: GitHubPullRequestUpdateDataInput!
  create: GitHubPullRequestCreateInput!
}

input GitHubPullRequestUpsertWithWhereUniqueNestedInput {
  where: GitHubPullRequestWhereUniqueInput!
  update: GitHubPullRequestUpdateDataInput!
  create: GitHubPullRequestCreateInput!
}

input GitHubPullRequestWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubPullRequestWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubPullRequestWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubPullRequestWhereInput!]
  additions: Int

  """
  All values that are not equal to given value.
  """
  additions_not: Int

  """
  All values that are contained in given list.
  """
  additions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  additions_not_in: [Int!]

  """
  All values less than the given value.
  """
  additions_lt: Int

  """
  All values less than or equal the given value.
  """
  additions_lte: Int

  """
  All values greater than the given value.
  """
  additions_gt: Int

  """
  All values greater than or equal the given value.
  """
  additions_gte: Int
  bodyText: String

  """
  All values that are not equal to given value.
  """
  bodyText_not: String

  """
  All values that are contained in given list.
  """
  bodyText_in: [String!]

  """
  All values that are not contained in given list.
  """
  bodyText_not_in: [String!]

  """
  All values less than the given value.
  """
  bodyText_lt: String

  """
  All values less than or equal the given value.
  """
  bodyText_lte: String

  """
  All values greater than the given value.
  """
  bodyText_gt: String

  """
  All values greater than or equal the given value.
  """
  bodyText_gte: String

  """
  All values containing the given string.
  """
  bodyText_contains: String

  """
  All values not containing the given string.
  """
  bodyText_not_contains: String

  """
  All values starting with the given string.
  """
  bodyText_starts_with: String

  """
  All values not starting with the given string.
  """
  bodyText_not_starts_with: String

  """
  All values ending with the given string.
  """
  bodyText_ends_with: String

  """
  All values not ending with the given string.
  """
  bodyText_not_ends_with: String
  changedFiles: Int

  """
  All values that are not equal to given value.
  """
  changedFiles_not: Int

  """
  All values that are contained in given list.
  """
  changedFiles_in: [Int!]

  """
  All values that are not contained in given list.
  """
  changedFiles_not_in: [Int!]

  """
  All values less than the given value.
  """
  changedFiles_lt: Int

  """
  All values less than or equal the given value.
  """
  changedFiles_lte: Int

  """
  All values greater than the given value.
  """
  changedFiles_gt: Int

  """
  All values greater than or equal the given value.
  """
  changedFiles_gte: Int
  closed: Boolean

  """
  All values that are not equal to given value.
  """
  closed_not: Boolean
  closedAt: DateTime

  """
  All values that are not equal to given value.
  """
  closedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  closedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  closedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  closedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  closedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  closedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  closedAt_gte: DateTime
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  deletions: Int

  """
  All values that are not equal to given value.
  """
  deletions_not: Int

  """
  All values that are contained in given list.
  """
  deletions_in: [Int!]

  """
  All values that are not contained in given list.
  """
  deletions_not_in: [Int!]

  """
  All values less than the given value.
  """
  deletions_lt: Int

  """
  All values less than or equal the given value.
  """
  deletions_lte: Int

  """
  All values greater than the given value.
  """
  deletions_gt: Int

  """
  All values greater than or equal the given value.
  """
  deletions_gte: Int
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  isCrossRepository: Boolean

  """
  All values that are not equal to given value.
  """
  isCrossRepository_not: Boolean
  locked: Boolean

  """
  All values that are not equal to given value.
  """
  locked_not: Boolean
  merged: Boolean

  """
  All values that are not equal to given value.
  """
  merged_not: Boolean
  mergedAt: DateTime

  """
  All values that are not equal to given value.
  """
  mergedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  mergedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  mergedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  mergedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  mergedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  mergedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  mergedAt_gte: DateTime
  number: Int

  """
  All values that are not equal to given value.
  """
  number_not: Int

  """
  All values that are contained in given list.
  """
  number_in: [Int!]

  """
  All values that are not contained in given list.
  """
  number_not_in: [Int!]

  """
  All values less than the given value.
  """
  number_lt: Int

  """
  All values less than or equal the given value.
  """
  number_lte: Int

  """
  All values greater than the given value.
  """
  number_gt: Int

  """
  All values greater than or equal the given value.
  """
  number_gte: Int
  publishedAt: DateTime

  """
  All values that are not equal to given value.
  """
  publishedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  publishedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  publishedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  publishedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  publishedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  publishedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  publishedAt_gte: DateTime
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  assignees_every: GitHubUserWhereInput
  assignees_some: GitHubUserWhereInput
  assignees_none: GitHubUserWhereInput
  author: GitHubUserWhereInput
  comments_every: GitHubCommentWhereInput
  comments_some: GitHubCommentWhereInput
  comments_none: GitHubCommentWhereInput
  commits_every: GitHubCommitWhereInput
  commits_some: GitHubCommitWhereInput
  commits_none: GitHubCommitWhereInput
  files_every: GitHubFileDiffWhereInput
  files_some: GitHubFileDiffWhereInput
  files_none: GitHubFileDiffWhereInput
  labels_every: GitHubLabelWhereInput
  labels_some: GitHubLabelWhereInput
  labels_none: GitHubLabelWhereInput
  mergedBy: GitHubUserWhereInput
  participants_every: GitHubUserWhereInput
  participants_some: GitHubUserWhereInput
  participants_none: GitHubUserWhereInput
  reviewRequests_every: GitHubReviewRequestWhereInput
  reviewRequests_some: GitHubReviewRequestWhereInput
  reviewRequests_none: GitHubReviewRequestWhereInput
  reviews_every: GitHubPullRequestReviewWhereInput
  reviews_some: GitHubPullRequestReviewWhereInput
  reviews_none: GitHubPullRequestReviewWhereInput
  reviewThreads_every: GitHubReviewThreadWhereInput
  reviewThreads_some: GitHubReviewThreadWhereInput
  reviewThreads_none: GitHubReviewThreadWhereInput
}

input GitHubPullRequestWhereUniqueInput {
  id: ID
}

type GitHubRepository implements Node {
  collaborators(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  description: String!
  hasBranchRules: Boolean!
  hasContributingGuidelines: Boolean!
  hasPullRequestTemplate: Boolean!
  hasReadMe: Boolean!
  hasWiki: Boolean!
  id: ID!
  isArchived: Boolean!
  isDisabled: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  license: String
  name: String!
  owner: GitHubUser!
  primaryLanguage: String
  repositoryTopics(
    where: GitHubTopicWhereInput
    orderBy: GitHubTopicOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubTopic!]
  sshUrl: String!
  stargazers(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  updatedAtExternal: DateTime!
  url: String!
  watchers(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubRepositoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubRepositoryEdge]!
  aggregate: AggregateGitHubRepository!
}

input GitHubRepositoryCreateInput {
  description: String!
  hasBranchRules: Boolean!
  hasContributingGuidelines: Boolean!
  hasPullRequestTemplate: Boolean!
  hasReadMe: Boolean!
  hasWiki: Boolean!
  id: ID
  isArchived: Boolean!
  isDisabled: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  license: String
  name: String!
  primaryLanguage: String
  sshUrl: String!
  updatedAtExternal: DateTime!
  url: String!
  collaborators: GitHubUserCreateManyInput
  owner: GitHubUserCreateOneInput!
  repositoryTopics: GitHubTopicCreateManyInput
  stargazers: GitHubUserCreateManyInput
  watchers: GitHubUserCreateManyInput
}

input GitHubRepositoryCreateOneInput {
  create: GitHubRepositoryCreateInput
  connect: GitHubRepositoryWhereUniqueInput
}

"""
An edge in a connection.
"""
type GitHubRepositoryEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubRepository!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubRepositoryOrderByInput {
  description_ASC
  description_DESC
  hasBranchRules_ASC
  hasBranchRules_DESC
  hasContributingGuidelines_ASC
  hasContributingGuidelines_DESC
  hasPullRequestTemplate_ASC
  hasPullRequestTemplate_DESC
  hasReadMe_ASC
  hasReadMe_DESC
  hasWiki_ASC
  hasWiki_DESC
  id_ASC
  id_DESC
  isArchived_ASC
  isArchived_DESC
  isDisabled_ASC
  isDisabled_DESC
  isFork_ASC
  isFork_DESC
  isLocked_ASC
  isLocked_DESC
  isPrivate_ASC
  isPrivate_DESC
  license_ASC
  license_DESC
  name_ASC
  name_DESC
  primaryLanguage_ASC
  primaryLanguage_DESC
  sshUrl_ASC
  sshUrl_DESC
  updatedAtExternal_ASC
  updatedAtExternal_DESC
  url_ASC
  url_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubRepositoryPreviousValues {
  description: String!
  hasBranchRules: Boolean!
  hasContributingGuidelines: Boolean!
  hasPullRequestTemplate: Boolean!
  hasReadMe: Boolean!
  hasWiki: Boolean!
  id: ID!
  isArchived: Boolean!
  isDisabled: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  license: String
  name: String!
  primaryLanguage: String
  sshUrl: String!
  updatedAtExternal: DateTime!
  url: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type GitHubRepositorySubscriptionPayload {
  mutation: MutationType!
  node: GitHubRepository
  updatedFields: [String!]
  previousValues: GitHubRepositoryPreviousValues
}

input GitHubRepositorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubRepositorySubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubRepositorySubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubRepositorySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubRepositoryWhereInput
}

input GitHubRepositoryUpdateDataInput {
  description: String
  hasBranchRules: Boolean
  hasContributingGuidelines: Boolean
  hasPullRequestTemplate: Boolean
  hasReadMe: Boolean
  hasWiki: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  license: String
  name: String
  primaryLanguage: String
  sshUrl: String
  updatedAtExternal: DateTime
  url: String
  collaborators: GitHubUserUpdateManyInput
  owner: GitHubUserUpdateOneRequiredInput
  repositoryTopics: GitHubTopicUpdateManyInput
  stargazers: GitHubUserUpdateManyInput
  watchers: GitHubUserUpdateManyInput
}

input GitHubRepositoryUpdateInput {
  description: String
  hasBranchRules: Boolean
  hasContributingGuidelines: Boolean
  hasPullRequestTemplate: Boolean
  hasReadMe: Boolean
  hasWiki: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  license: String
  name: String
  primaryLanguage: String
  sshUrl: String
  updatedAtExternal: DateTime
  url: String
  collaborators: GitHubUserUpdateManyInput
  owner: GitHubUserUpdateOneRequiredInput
  repositoryTopics: GitHubTopicUpdateManyInput
  stargazers: GitHubUserUpdateManyInput
  watchers: GitHubUserUpdateManyInput
}

input GitHubRepositoryUpdateManyMutationInput {
  description: String
  hasBranchRules: Boolean
  hasContributingGuidelines: Boolean
  hasPullRequestTemplate: Boolean
  hasReadMe: Boolean
  hasWiki: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  license: String
  name: String
  primaryLanguage: String
  sshUrl: String
  updatedAtExternal: DateTime
  url: String
}

input GitHubRepositoryUpdateOneRequiredInput {
  create: GitHubRepositoryCreateInput
  connect: GitHubRepositoryWhereUniqueInput
  update: GitHubRepositoryUpdateDataInput
  upsert: GitHubRepositoryUpsertNestedInput
}

input GitHubRepositoryUpsertNestedInput {
  update: GitHubRepositoryUpdateDataInput!
  create: GitHubRepositoryCreateInput!
}

input GitHubRepositoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubRepositoryWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubRepositoryWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubRepositoryWhereInput!]
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  hasBranchRules: Boolean

  """
  All values that are not equal to given value.
  """
  hasBranchRules_not: Boolean
  hasContributingGuidelines: Boolean

  """
  All values that are not equal to given value.
  """
  hasContributingGuidelines_not: Boolean
  hasPullRequestTemplate: Boolean

  """
  All values that are not equal to given value.
  """
  hasPullRequestTemplate_not: Boolean
  hasReadMe: Boolean

  """
  All values that are not equal to given value.
  """
  hasReadMe_not: Boolean
  hasWiki: Boolean

  """
  All values that are not equal to given value.
  """
  hasWiki_not: Boolean
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  isArchived: Boolean

  """
  All values that are not equal to given value.
  """
  isArchived_not: Boolean
  isDisabled: Boolean

  """
  All values that are not equal to given value.
  """
  isDisabled_not: Boolean
  isFork: Boolean

  """
  All values that are not equal to given value.
  """
  isFork_not: Boolean
  isLocked: Boolean

  """
  All values that are not equal to given value.
  """
  isLocked_not: Boolean
  isPrivate: Boolean

  """
  All values that are not equal to given value.
  """
  isPrivate_not: Boolean
  license: String

  """
  All values that are not equal to given value.
  """
  license_not: String

  """
  All values that are contained in given list.
  """
  license_in: [String!]

  """
  All values that are not contained in given list.
  """
  license_not_in: [String!]

  """
  All values less than the given value.
  """
  license_lt: String

  """
  All values less than or equal the given value.
  """
  license_lte: String

  """
  All values greater than the given value.
  """
  license_gt: String

  """
  All values greater than or equal the given value.
  """
  license_gte: String

  """
  All values containing the given string.
  """
  license_contains: String

  """
  All values not containing the given string.
  """
  license_not_contains: String

  """
  All values starting with the given string.
  """
  license_starts_with: String

  """
  All values not starting with the given string.
  """
  license_not_starts_with: String

  """
  All values ending with the given string.
  """
  license_ends_with: String

  """
  All values not ending with the given string.
  """
  license_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  primaryLanguage: String

  """
  All values that are not equal to given value.
  """
  primaryLanguage_not: String

  """
  All values that are contained in given list.
  """
  primaryLanguage_in: [String!]

  """
  All values that are not contained in given list.
  """
  primaryLanguage_not_in: [String!]

  """
  All values less than the given value.
  """
  primaryLanguage_lt: String

  """
  All values less than or equal the given value.
  """
  primaryLanguage_lte: String

  """
  All values greater than the given value.
  """
  primaryLanguage_gt: String

  """
  All values greater than or equal the given value.
  """
  primaryLanguage_gte: String

  """
  All values containing the given string.
  """
  primaryLanguage_contains: String

  """
  All values not containing the given string.
  """
  primaryLanguage_not_contains: String

  """
  All values starting with the given string.
  """
  primaryLanguage_starts_with: String

  """
  All values not starting with the given string.
  """
  primaryLanguage_not_starts_with: String

  """
  All values ending with the given string.
  """
  primaryLanguage_ends_with: String

  """
  All values not ending with the given string.
  """
  primaryLanguage_not_ends_with: String
  sshUrl: String

  """
  All values that are not equal to given value.
  """
  sshUrl_not: String

  """
  All values that are contained in given list.
  """
  sshUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  sshUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  sshUrl_lt: String

  """
  All values less than or equal the given value.
  """
  sshUrl_lte: String

  """
  All values greater than the given value.
  """
  sshUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  sshUrl_gte: String

  """
  All values containing the given string.
  """
  sshUrl_contains: String

  """
  All values not containing the given string.
  """
  sshUrl_not_contains: String

  """
  All values starting with the given string.
  """
  sshUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  sshUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  sshUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  sshUrl_not_ends_with: String
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  collaborators_every: GitHubUserWhereInput
  collaborators_some: GitHubUserWhereInput
  collaborators_none: GitHubUserWhereInput
  owner: GitHubUserWhereInput
  repositoryTopics_every: GitHubTopicWhereInput
  repositoryTopics_some: GitHubTopicWhereInput
  repositoryTopics_none: GitHubTopicWhereInput
  stargazers_every: GitHubUserWhereInput
  stargazers_some: GitHubUserWhereInput
  stargazers_none: GitHubUserWhereInput
  watchers_every: GitHubUserWhereInput
  watchers_some: GitHubUserWhereInput
  watchers_none: GitHubUserWhereInput
}

input GitHubRepositoryWhereUniqueInput {
  id: ID
}

type GitHubReviewRequest implements Node {
  id: ID!
  pullRequest: GitHubPullRequest!
  requestedReviewer: GitHubUser!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubReviewRequestConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubReviewRequestEdge]!
  aggregate: AggregateGitHubReviewRequest!
}

input GitHubReviewRequestCreateInput {
  id: ID
  pullRequest: GitHubPullRequestCreateOneInput!
  requestedReviewer: GitHubUserCreateOneInput!
}

input GitHubReviewRequestCreateManyInput {
  create: [GitHubReviewRequestCreateInput!]
  connect: [GitHubReviewRequestWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubReviewRequestEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubReviewRequest!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubReviewRequestOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubReviewRequestPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubReviewRequestScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubReviewRequestScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubReviewRequestScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubReviewRequestScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubReviewRequestSubscriptionPayload {
  mutation: MutationType!
  node: GitHubReviewRequest
  updatedFields: [String!]
  previousValues: GitHubReviewRequestPreviousValues
}

input GitHubReviewRequestSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubReviewRequestSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubReviewRequestSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubReviewRequestSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubReviewRequestWhereInput
}

input GitHubReviewRequestUpdateDataInput {
  pullRequest: GitHubPullRequestUpdateOneRequiredInput
  requestedReviewer: GitHubUserUpdateOneRequiredInput
}

input GitHubReviewRequestUpdateInput {
  pullRequest: GitHubPullRequestUpdateOneRequiredInput
  requestedReviewer: GitHubUserUpdateOneRequiredInput
}

input GitHubReviewRequestUpdateManyInput {
  create: [GitHubReviewRequestCreateInput!]
  connect: [GitHubReviewRequestWhereUniqueInput!]
  set: [GitHubReviewRequestWhereUniqueInput!]
  disconnect: [GitHubReviewRequestWhereUniqueInput!]
  delete: [GitHubReviewRequestWhereUniqueInput!]
  update: [GitHubReviewRequestUpdateWithWhereUniqueNestedInput!]
  deleteMany: [GitHubReviewRequestScalarWhereInput!]
  upsert: [GitHubReviewRequestUpsertWithWhereUniqueNestedInput!]
}

input GitHubReviewRequestUpdateWithWhereUniqueNestedInput {
  where: GitHubReviewRequestWhereUniqueInput!
  data: GitHubReviewRequestUpdateDataInput!
}

input GitHubReviewRequestUpsertWithWhereUniqueNestedInput {
  where: GitHubReviewRequestWhereUniqueInput!
  update: GitHubReviewRequestUpdateDataInput!
  create: GitHubReviewRequestCreateInput!
}

input GitHubReviewRequestWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubReviewRequestWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubReviewRequestWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubReviewRequestWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  pullRequest: GitHubPullRequestWhereInput
  requestedReviewer: GitHubUserWhereInput
}

input GitHubReviewRequestWhereUniqueInput {
  id: ID
}

type GitHubReviewThread implements Node {
  comments(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubComment!]
  id: ID!
  isResolved: Boolean!
  pullRequest: GitHubPullRequest!
  repository: GitHubRepository!
  resolvedBy: GitHubUser!
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubReviewThreadConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubReviewThreadEdge]!
  aggregate: AggregateGitHubReviewThread!
}

input GitHubReviewThreadCreateInput {
  id: ID
  isResolved: Boolean!
  comments: GitHubCommentCreateManyInput
  pullRequest: GitHubPullRequestCreateOneInput!
  repository: GitHubRepositoryCreateOneInput!
  resolvedBy: GitHubUserCreateOneInput!
}

input GitHubReviewThreadCreateManyInput {
  create: [GitHubReviewThreadCreateInput!]
  connect: [GitHubReviewThreadWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubReviewThreadEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubReviewThread!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubReviewThreadOrderByInput {
  id_ASC
  id_DESC
  isResolved_ASC
  isResolved_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubReviewThreadPreviousValues {
  id: ID!
  isResolved: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubReviewThreadScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubReviewThreadScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubReviewThreadScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubReviewThreadScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  isResolved: Boolean

  """
  All values that are not equal to given value.
  """
  isResolved_not: Boolean
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubReviewThreadSubscriptionPayload {
  mutation: MutationType!
  node: GitHubReviewThread
  updatedFields: [String!]
  previousValues: GitHubReviewThreadPreviousValues
}

input GitHubReviewThreadSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubReviewThreadSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubReviewThreadSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubReviewThreadSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubReviewThreadWhereInput
}

input GitHubReviewThreadUpdateDataInput {
  isResolved: Boolean
  comments: GitHubCommentUpdateManyInput
  pullRequest: GitHubPullRequestUpdateOneRequiredInput
  repository: GitHubRepositoryUpdateOneRequiredInput
  resolvedBy: GitHubUserUpdateOneRequiredInput
}

input GitHubReviewThreadUpdateInput {
  isResolved: Boolean
  comments: GitHubCommentUpdateManyInput
  pullRequest: GitHubPullRequestUpdateOneRequiredInput
  repository: GitHubRepositoryUpdateOneRequiredInput
  resolvedBy: GitHubUserUpdateOneRequiredInput
}

input GitHubReviewThreadUpdateManyDataInput {
  isResolved: Boolean
}

input GitHubReviewThreadUpdateManyInput {
  create: [GitHubReviewThreadCreateInput!]
  connect: [GitHubReviewThreadWhereUniqueInput!]
  set: [GitHubReviewThreadWhereUniqueInput!]
  disconnect: [GitHubReviewThreadWhereUniqueInput!]
  delete: [GitHubReviewThreadWhereUniqueInput!]
  update: [GitHubReviewThreadUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubReviewThreadUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubReviewThreadScalarWhereInput!]
  upsert: [GitHubReviewThreadUpsertWithWhereUniqueNestedInput!]
}

input GitHubReviewThreadUpdateManyMutationInput {
  isResolved: Boolean
}

input GitHubReviewThreadUpdateManyWithWhereNestedInput {
  where: GitHubReviewThreadScalarWhereInput!
  data: GitHubReviewThreadUpdateManyDataInput!
}

input GitHubReviewThreadUpdateWithWhereUniqueNestedInput {
  where: GitHubReviewThreadWhereUniqueInput!
  data: GitHubReviewThreadUpdateDataInput!
}

input GitHubReviewThreadUpsertWithWhereUniqueNestedInput {
  where: GitHubReviewThreadWhereUniqueInput!
  update: GitHubReviewThreadUpdateDataInput!
  create: GitHubReviewThreadCreateInput!
}

input GitHubReviewThreadWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubReviewThreadWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubReviewThreadWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubReviewThreadWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  isResolved: Boolean

  """
  All values that are not equal to given value.
  """
  isResolved_not: Boolean
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  comments_every: GitHubCommentWhereInput
  comments_some: GitHubCommentWhereInput
  comments_none: GitHubCommentWhereInput
  pullRequest: GitHubPullRequestWhereInput
  repository: GitHubRepositoryWhereInput
  resolvedBy: GitHubUserWhereInput
}

input GitHubReviewThreadWhereUniqueInput {
  id: ID
}

type GitHubTopic implements Node {
  id: ID!
  name: String!
  relatedTopics(
    where: GitHubTopicWhereInput
    orderBy: GitHubTopicOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubTopic!]
  stargazers(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubTopicConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubTopicEdge]!
  aggregate: AggregateGitHubTopic!
}

input GitHubTopicCreateInput {
  id: ID
  name: String!
  relatedTopics: GitHubTopicCreateManyInput
  stargazers: GitHubUserCreateManyInput
}

input GitHubTopicCreateManyInput {
  create: [GitHubTopicCreateInput!]
  connect: [GitHubTopicWhereUniqueInput!]
}

"""
An edge in a connection.
"""
type GitHubTopicEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubTopic!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubTopicOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubTopicPreviousValues {
  id: ID!
  name: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubTopicScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubTopicScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubTopicScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubTopicScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubTopicSubscriptionPayload {
  mutation: MutationType!
  node: GitHubTopic
  updatedFields: [String!]
  previousValues: GitHubTopicPreviousValues
}

input GitHubTopicSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubTopicSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubTopicSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubTopicSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubTopicWhereInput
}

input GitHubTopicUpdateDataInput {
  name: String
  relatedTopics: GitHubTopicUpdateManyInput
  stargazers: GitHubUserUpdateManyInput
}

input GitHubTopicUpdateInput {
  name: String
  relatedTopics: GitHubTopicUpdateManyInput
  stargazers: GitHubUserUpdateManyInput
}

input GitHubTopicUpdateManyDataInput {
  name: String
}

input GitHubTopicUpdateManyInput {
  create: [GitHubTopicCreateInput!]
  connect: [GitHubTopicWhereUniqueInput!]
  set: [GitHubTopicWhereUniqueInput!]
  disconnect: [GitHubTopicWhereUniqueInput!]
  delete: [GitHubTopicWhereUniqueInput!]
  update: [GitHubTopicUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubTopicUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubTopicScalarWhereInput!]
  upsert: [GitHubTopicUpsertWithWhereUniqueNestedInput!]
}

input GitHubTopicUpdateManyMutationInput {
  name: String
}

input GitHubTopicUpdateManyWithWhereNestedInput {
  where: GitHubTopicScalarWhereInput!
  data: GitHubTopicUpdateManyDataInput!
}

input GitHubTopicUpdateWithWhereUniqueNestedInput {
  where: GitHubTopicWhereUniqueInput!
  data: GitHubTopicUpdateDataInput!
}

input GitHubTopicUpsertWithWhereUniqueNestedInput {
  where: GitHubTopicWhereUniqueInput!
  update: GitHubTopicUpdateDataInput!
  create: GitHubTopicCreateInput!
}

input GitHubTopicWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubTopicWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubTopicWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubTopicWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  relatedTopics_every: GitHubTopicWhereInput
  relatedTopics_some: GitHubTopicWhereInput
  relatedTopics_none: GitHubTopicWhereInput
  stargazers_every: GitHubUserWhereInput
  stargazers_some: GitHubUserWhereInput
  stargazers_none: GitHubUserWhereInput
}

input GitHubTopicWhereUniqueInput {
  id: ID
}

type GitHubUser implements Node {
  id: ID!
  url: String!
  name: String!
  login: String!
  avatarUrl: String!
  bio: String
  company: String
  createdAtExternal: DateTime!
  email: String
  followers(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  following(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser!]
  isBountyHunter: Boolean!
  isCampusExpert: Boolean!
  isDeveloperProgramMember: Boolean!
  isEmployee: Boolean!
  isHireable: Boolean!
  isSiteAdmin: Boolean!
  isViewer: Boolean!
  issueComments(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubComment!]
  issues(
    where: GitHubIssueWhereInput
    orderBy: GitHubIssueOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubIssue!]
  pullRequests(
    where: GitHubPullRequestWhereInput
    orderBy: GitHubPullRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubPullRequest!]
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A connection to a list of items.
"""
type GitHubUserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubUserEdge]!
  aggregate: AggregateGitHubUser!
}

input GitHubUserCreateInput {
  id: ID
  url: String!
  name: String!
  login: String!
  avatarUrl: String!
  bio: String
  company: String
  createdAtExternal: DateTime!
  email: String
  isBountyHunter: Boolean!
  isCampusExpert: Boolean!
  isDeveloperProgramMember: Boolean!
  isEmployee: Boolean!
  isHireable: Boolean!
  isSiteAdmin: Boolean!
  isViewer: Boolean!
  followers: GitHubUserCreateManyInput
  following: GitHubUserCreateManyInput
  issueComments: GitHubCommentCreateManyInput
  issues: GitHubIssueCreateManyInput
  pullRequests: GitHubPullRequestCreateManyInput
}

input GitHubUserCreateManyInput {
  create: [GitHubUserCreateInput!]
  connect: [GitHubUserWhereUniqueInput!]
}

input GitHubUserCreateOneInput {
  create: GitHubUserCreateInput
  connect: GitHubUserWhereUniqueInput
}

"""
An edge in a connection.
"""
type GitHubUserEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubUser!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubUserOrderByInput {
  id_ASC
  id_DESC
  url_ASC
  url_DESC
  name_ASC
  name_DESC
  login_ASC
  login_DESC
  avatarUrl_ASC
  avatarUrl_DESC
  bio_ASC
  bio_DESC
  company_ASC
  company_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  email_ASC
  email_DESC
  isBountyHunter_ASC
  isBountyHunter_DESC
  isCampusExpert_ASC
  isCampusExpert_DESC
  isDeveloperProgramMember_ASC
  isDeveloperProgramMember_DESC
  isEmployee_ASC
  isEmployee_DESC
  isHireable_ASC
  isHireable_DESC
  isSiteAdmin_ASC
  isSiteAdmin_DESC
  isViewer_ASC
  isViewer_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type GitHubUserPreviousValues {
  id: ID!
  url: String!
  name: String!
  login: String!
  avatarUrl: String!
  bio: String
  company: String
  createdAtExternal: DateTime!
  email: String
  isBountyHunter: Boolean!
  isCampusExpert: Boolean!
  isDeveloperProgramMember: Boolean!
  isEmployee: Boolean!
  isHireable: Boolean!
  isSiteAdmin: Boolean!
  isViewer: Boolean!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input GitHubUserScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubUserScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubUserScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubUserScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  login: String

  """
  All values that are not equal to given value.
  """
  login_not: String

  """
  All values that are contained in given list.
  """
  login_in: [String!]

  """
  All values that are not contained in given list.
  """
  login_not_in: [String!]

  """
  All values less than the given value.
  """
  login_lt: String

  """
  All values less than or equal the given value.
  """
  login_lte: String

  """
  All values greater than the given value.
  """
  login_gt: String

  """
  All values greater than or equal the given value.
  """
  login_gte: String

  """
  All values containing the given string.
  """
  login_contains: String

  """
  All values not containing the given string.
  """
  login_not_contains: String

  """
  All values starting with the given string.
  """
  login_starts_with: String

  """
  All values not starting with the given string.
  """
  login_not_starts_with: String

  """
  All values ending with the given string.
  """
  login_ends_with: String

  """
  All values not ending with the given string.
  """
  login_not_ends_with: String
  avatarUrl: String

  """
  All values that are not equal to given value.
  """
  avatarUrl_not: String

  """
  All values that are contained in given list.
  """
  avatarUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  avatarUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  avatarUrl_lt: String

  """
  All values less than or equal the given value.
  """
  avatarUrl_lte: String

  """
  All values greater than the given value.
  """
  avatarUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  avatarUrl_gte: String

  """
  All values containing the given string.
  """
  avatarUrl_contains: String

  """
  All values not containing the given string.
  """
  avatarUrl_not_contains: String

  """
  All values starting with the given string.
  """
  avatarUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  avatarUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  avatarUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  avatarUrl_not_ends_with: String
  bio: String

  """
  All values that are not equal to given value.
  """
  bio_not: String

  """
  All values that are contained in given list.
  """
  bio_in: [String!]

  """
  All values that are not contained in given list.
  """
  bio_not_in: [String!]

  """
  All values less than the given value.
  """
  bio_lt: String

  """
  All values less than or equal the given value.
  """
  bio_lte: String

  """
  All values greater than the given value.
  """
  bio_gt: String

  """
  All values greater than or equal the given value.
  """
  bio_gte: String

  """
  All values containing the given string.
  """
  bio_contains: String

  """
  All values not containing the given string.
  """
  bio_not_contains: String

  """
  All values starting with the given string.
  """
  bio_starts_with: String

  """
  All values not starting with the given string.
  """
  bio_not_starts_with: String

  """
  All values ending with the given string.
  """
  bio_ends_with: String

  """
  All values not ending with the given string.
  """
  bio_not_ends_with: String
  company: String

  """
  All values that are not equal to given value.
  """
  company_not: String

  """
  All values that are contained in given list.
  """
  company_in: [String!]

  """
  All values that are not contained in given list.
  """
  company_not_in: [String!]

  """
  All values less than the given value.
  """
  company_lt: String

  """
  All values less than or equal the given value.
  """
  company_lte: String

  """
  All values greater than the given value.
  """
  company_gt: String

  """
  All values greater than or equal the given value.
  """
  company_gte: String

  """
  All values containing the given string.
  """
  company_contains: String

  """
  All values not containing the given string.
  """
  company_not_contains: String

  """
  All values starting with the given string.
  """
  company_starts_with: String

  """
  All values not starting with the given string.
  """
  company_not_starts_with: String

  """
  All values ending with the given string.
  """
  company_ends_with: String

  """
  All values not ending with the given string.
  """
  company_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  isBountyHunter: Boolean

  """
  All values that are not equal to given value.
  """
  isBountyHunter_not: Boolean
  isCampusExpert: Boolean

  """
  All values that are not equal to given value.
  """
  isCampusExpert_not: Boolean
  isDeveloperProgramMember: Boolean

  """
  All values that are not equal to given value.
  """
  isDeveloperProgramMember_not: Boolean
  isEmployee: Boolean

  """
  All values that are not equal to given value.
  """
  isEmployee_not: Boolean
  isHireable: Boolean

  """
  All values that are not equal to given value.
  """
  isHireable_not: Boolean
  isSiteAdmin: Boolean

  """
  All values that are not equal to given value.
  """
  isSiteAdmin_not: Boolean
  isViewer: Boolean

  """
  All values that are not equal to given value.
  """
  isViewer_not: Boolean
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
}

type GitHubUserSubscriptionPayload {
  mutation: MutationType!
  node: GitHubUser
  updatedFields: [String!]
  previousValues: GitHubUserPreviousValues
}

input GitHubUserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubUserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubUserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubUserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubUserWhereInput
}

input GitHubUserUpdateDataInput {
  url: String
  name: String
  login: String
  avatarUrl: String
  bio: String
  company: String
  createdAtExternal: DateTime
  email: String
  isBountyHunter: Boolean
  isCampusExpert: Boolean
  isDeveloperProgramMember: Boolean
  isEmployee: Boolean
  isHireable: Boolean
  isSiteAdmin: Boolean
  isViewer: Boolean
  followers: GitHubUserUpdateManyInput
  following: GitHubUserUpdateManyInput
  issueComments: GitHubCommentUpdateManyInput
  issues: GitHubIssueUpdateManyInput
  pullRequests: GitHubPullRequestUpdateManyInput
}

input GitHubUserUpdateInput {
  url: String
  name: String
  login: String
  avatarUrl: String
  bio: String
  company: String
  createdAtExternal: DateTime
  email: String
  isBountyHunter: Boolean
  isCampusExpert: Boolean
  isDeveloperProgramMember: Boolean
  isEmployee: Boolean
  isHireable: Boolean
  isSiteAdmin: Boolean
  isViewer: Boolean
  followers: GitHubUserUpdateManyInput
  following: GitHubUserUpdateManyInput
  issueComments: GitHubCommentUpdateManyInput
  issues: GitHubIssueUpdateManyInput
  pullRequests: GitHubPullRequestUpdateManyInput
}

input GitHubUserUpdateManyDataInput {
  url: String
  name: String
  login: String
  avatarUrl: String
  bio: String
  company: String
  createdAtExternal: DateTime
  email: String
  isBountyHunter: Boolean
  isCampusExpert: Boolean
  isDeveloperProgramMember: Boolean
  isEmployee: Boolean
  isHireable: Boolean
  isSiteAdmin: Boolean
  isViewer: Boolean
}

input GitHubUserUpdateManyInput {
  create: [GitHubUserCreateInput!]
  connect: [GitHubUserWhereUniqueInput!]
  set: [GitHubUserWhereUniqueInput!]
  disconnect: [GitHubUserWhereUniqueInput!]
  delete: [GitHubUserWhereUniqueInput!]
  update: [GitHubUserUpdateWithWhereUniqueNestedInput!]
  updateMany: [GitHubUserUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubUserScalarWhereInput!]
  upsert: [GitHubUserUpsertWithWhereUniqueNestedInput!]
}

input GitHubUserUpdateManyMutationInput {
  url: String
  name: String
  login: String
  avatarUrl: String
  bio: String
  company: String
  createdAtExternal: DateTime
  email: String
  isBountyHunter: Boolean
  isCampusExpert: Boolean
  isDeveloperProgramMember: Boolean
  isEmployee: Boolean
  isHireable: Boolean
  isSiteAdmin: Boolean
  isViewer: Boolean
}

input GitHubUserUpdateManyWithWhereNestedInput {
  where: GitHubUserScalarWhereInput!
  data: GitHubUserUpdateManyDataInput!
}

input GitHubUserUpdateOneInput {
  create: GitHubUserCreateInput
  connect: GitHubUserWhereUniqueInput
  disconnect: Boolean
  delete: Boolean
  update: GitHubUserUpdateDataInput
  upsert: GitHubUserUpsertNestedInput
}

input GitHubUserUpdateOneRequiredInput {
  create: GitHubUserCreateInput
  connect: GitHubUserWhereUniqueInput
  update: GitHubUserUpdateDataInput
  upsert: GitHubUserUpsertNestedInput
}

input GitHubUserUpdateWithWhereUniqueNestedInput {
  where: GitHubUserWhereUniqueInput!
  data: GitHubUserUpdateDataInput!
}

input GitHubUserUpsertNestedInput {
  update: GitHubUserUpdateDataInput!
  create: GitHubUserCreateInput!
}

input GitHubUserUpsertWithWhereUniqueNestedInput {
  where: GitHubUserWhereUniqueInput!
  update: GitHubUserUpdateDataInput!
  create: GitHubUserCreateInput!
}

input GitHubUserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubUserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubUserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubUserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  login: String

  """
  All values that are not equal to given value.
  """
  login_not: String

  """
  All values that are contained in given list.
  """
  login_in: [String!]

  """
  All values that are not contained in given list.
  """
  login_not_in: [String!]

  """
  All values less than the given value.
  """
  login_lt: String

  """
  All values less than or equal the given value.
  """
  login_lte: String

  """
  All values greater than the given value.
  """
  login_gt: String

  """
  All values greater than or equal the given value.
  """
  login_gte: String

  """
  All values containing the given string.
  """
  login_contains: String

  """
  All values not containing the given string.
  """
  login_not_contains: String

  """
  All values starting with the given string.
  """
  login_starts_with: String

  """
  All values not starting with the given string.
  """
  login_not_starts_with: String

  """
  All values ending with the given string.
  """
  login_ends_with: String

  """
  All values not ending with the given string.
  """
  login_not_ends_with: String
  avatarUrl: String

  """
  All values that are not equal to given value.
  """
  avatarUrl_not: String

  """
  All values that are contained in given list.
  """
  avatarUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  avatarUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  avatarUrl_lt: String

  """
  All values less than or equal the given value.
  """
  avatarUrl_lte: String

  """
  All values greater than the given value.
  """
  avatarUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  avatarUrl_gte: String

  """
  All values containing the given string.
  """
  avatarUrl_contains: String

  """
  All values not containing the given string.
  """
  avatarUrl_not_contains: String

  """
  All values starting with the given string.
  """
  avatarUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  avatarUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  avatarUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  avatarUrl_not_ends_with: String
  bio: String

  """
  All values that are not equal to given value.
  """
  bio_not: String

  """
  All values that are contained in given list.
  """
  bio_in: [String!]

  """
  All values that are not contained in given list.
  """
  bio_not_in: [String!]

  """
  All values less than the given value.
  """
  bio_lt: String

  """
  All values less than or equal the given value.
  """
  bio_lte: String

  """
  All values greater than the given value.
  """
  bio_gt: String

  """
  All values greater than or equal the given value.
  """
  bio_gte: String

  """
  All values containing the given string.
  """
  bio_contains: String

  """
  All values not containing the given string.
  """
  bio_not_contains: String

  """
  All values starting with the given string.
  """
  bio_starts_with: String

  """
  All values not starting with the given string.
  """
  bio_not_starts_with: String

  """
  All values ending with the given string.
  """
  bio_ends_with: String

  """
  All values not ending with the given string.
  """
  bio_not_ends_with: String
  company: String

  """
  All values that are not equal to given value.
  """
  company_not: String

  """
  All values that are contained in given list.
  """
  company_in: [String!]

  """
  All values that are not contained in given list.
  """
  company_not_in: [String!]

  """
  All values less than the given value.
  """
  company_lt: String

  """
  All values less than or equal the given value.
  """
  company_lte: String

  """
  All values greater than the given value.
  """
  company_gt: String

  """
  All values greater than or equal the given value.
  """
  company_gte: String

  """
  All values containing the given string.
  """
  company_contains: String

  """
  All values not containing the given string.
  """
  company_not_contains: String

  """
  All values starting with the given string.
  """
  company_starts_with: String

  """
  All values not starting with the given string.
  """
  company_not_starts_with: String

  """
  All values ending with the given string.
  """
  company_ends_with: String

  """
  All values not ending with the given string.
  """
  company_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  isBountyHunter: Boolean

  """
  All values that are not equal to given value.
  """
  isBountyHunter_not: Boolean
  isCampusExpert: Boolean

  """
  All values that are not equal to given value.
  """
  isCampusExpert_not: Boolean
  isDeveloperProgramMember: Boolean

  """
  All values that are not equal to given value.
  """
  isDeveloperProgramMember_not: Boolean
  isEmployee: Boolean

  """
  All values that are not equal to given value.
  """
  isEmployee_not: Boolean
  isHireable: Boolean

  """
  All values that are not equal to given value.
  """
  isHireable_not: Boolean
  isSiteAdmin: Boolean

  """
  All values that are not equal to given value.
  """
  isSiteAdmin_not: Boolean
  isViewer: Boolean

  """
  All values that are not equal to given value.
  """
  isViewer_not: Boolean
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  followers_every: GitHubUserWhereInput
  followers_some: GitHubUserWhereInput
  followers_none: GitHubUserWhereInput
  following_every: GitHubUserWhereInput
  following_some: GitHubUserWhereInput
  following_none: GitHubUserWhereInput
  issueComments_every: GitHubCommentWhereInput
  issueComments_some: GitHubCommentWhereInput
  issueComments_none: GitHubCommentWhereInput
  issues_every: GitHubIssueWhereInput
  issues_some: GitHubIssueWhereInput
  issues_none: GitHubIssueWhereInput
  pullRequests_every: GitHubPullRequestWhereInput
  pullRequests_some: GitHubPullRequestWhereInput
  pullRequests_none: GitHubPullRequestWhereInput
}

input GitHubUserWhereUniqueInput {
  id: ID
}

type GitHubWebhookEvent implements Node {
  id: ID!
  createdAt: DateTime!
  repository: Repository!
  eventType: String!
  action: String
  sender: String!
}

"""
A connection to a list of items.
"""
type GitHubWebhookEventConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [GitHubWebhookEventEdge]!
  aggregate: AggregateGitHubWebhookEvent!
}

input GitHubWebhookEventCreateInput {
  id: ID
  eventType: String!
  action: String
  sender: String!
  repository: RepositoryCreateOneWithoutWebhookEventsInput!
}

input GitHubWebhookEventCreateManyWithoutRepositoryInput {
  create: [GitHubWebhookEventCreateWithoutRepositoryInput!]
  connect: [GitHubWebhookEventWhereUniqueInput!]
}

input GitHubWebhookEventCreateWithoutRepositoryInput {
  id: ID
  eventType: String!
  action: String
  sender: String!
}

"""
An edge in a connection.
"""
type GitHubWebhookEventEdge {
  """
  The item at the end of the edge.
  """
  node: GitHubWebhookEvent!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum GitHubWebhookEventOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  eventType_ASC
  eventType_DESC
  action_ASC
  action_DESC
  sender_ASC
  sender_DESC
}

type GitHubWebhookEventPreviousValues {
  id: ID!
  createdAt: DateTime!
  eventType: String!
  action: String
  sender: String!
}

input GitHubWebhookEventScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubWebhookEventScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubWebhookEventScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubWebhookEventScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  eventType: String

  """
  All values that are not equal to given value.
  """
  eventType_not: String

  """
  All values that are contained in given list.
  """
  eventType_in: [String!]

  """
  All values that are not contained in given list.
  """
  eventType_not_in: [String!]

  """
  All values less than the given value.
  """
  eventType_lt: String

  """
  All values less than or equal the given value.
  """
  eventType_lte: String

  """
  All values greater than the given value.
  """
  eventType_gt: String

  """
  All values greater than or equal the given value.
  """
  eventType_gte: String

  """
  All values containing the given string.
  """
  eventType_contains: String

  """
  All values not containing the given string.
  """
  eventType_not_contains: String

  """
  All values starting with the given string.
  """
  eventType_starts_with: String

  """
  All values not starting with the given string.
  """
  eventType_not_starts_with: String

  """
  All values ending with the given string.
  """
  eventType_ends_with: String

  """
  All values not ending with the given string.
  """
  eventType_not_ends_with: String
  action: String

  """
  All values that are not equal to given value.
  """
  action_not: String

  """
  All values that are contained in given list.
  """
  action_in: [String!]

  """
  All values that are not contained in given list.
  """
  action_not_in: [String!]

  """
  All values less than the given value.
  """
  action_lt: String

  """
  All values less than or equal the given value.
  """
  action_lte: String

  """
  All values greater than the given value.
  """
  action_gt: String

  """
  All values greater than or equal the given value.
  """
  action_gte: String

  """
  All values containing the given string.
  """
  action_contains: String

  """
  All values not containing the given string.
  """
  action_not_contains: String

  """
  All values starting with the given string.
  """
  action_starts_with: String

  """
  All values not starting with the given string.
  """
  action_not_starts_with: String

  """
  All values ending with the given string.
  """
  action_ends_with: String

  """
  All values not ending with the given string.
  """
  action_not_ends_with: String
  sender: String

  """
  All values that are not equal to given value.
  """
  sender_not: String

  """
  All values that are contained in given list.
  """
  sender_in: [String!]

  """
  All values that are not contained in given list.
  """
  sender_not_in: [String!]

  """
  All values less than the given value.
  """
  sender_lt: String

  """
  All values less than or equal the given value.
  """
  sender_lte: String

  """
  All values greater than the given value.
  """
  sender_gt: String

  """
  All values greater than or equal the given value.
  """
  sender_gte: String

  """
  All values containing the given string.
  """
  sender_contains: String

  """
  All values not containing the given string.
  """
  sender_not_contains: String

  """
  All values starting with the given string.
  """
  sender_starts_with: String

  """
  All values not starting with the given string.
  """
  sender_not_starts_with: String

  """
  All values ending with the given string.
  """
  sender_ends_with: String

  """
  All values not ending with the given string.
  """
  sender_not_ends_with: String
}

type GitHubWebhookEventSubscriptionPayload {
  mutation: MutationType!
  node: GitHubWebhookEvent
  updatedFields: [String!]
  previousValues: GitHubWebhookEventPreviousValues
}

input GitHubWebhookEventSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubWebhookEventSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubWebhookEventSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubWebhookEventSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: GitHubWebhookEventWhereInput
}

input GitHubWebhookEventUpdateInput {
  eventType: String
  action: String
  sender: String
  repository: RepositoryUpdateOneRequiredWithoutWebhookEventsInput
}

input GitHubWebhookEventUpdateManyDataInput {
  eventType: String
  action: String
  sender: String
}

input GitHubWebhookEventUpdateManyMutationInput {
  eventType: String
  action: String
  sender: String
}

input GitHubWebhookEventUpdateManyWithoutRepositoryInput {
  create: [GitHubWebhookEventCreateWithoutRepositoryInput!]
  connect: [GitHubWebhookEventWhereUniqueInput!]
  set: [GitHubWebhookEventWhereUniqueInput!]
  disconnect: [GitHubWebhookEventWhereUniqueInput!]
  delete: [GitHubWebhookEventWhereUniqueInput!]
  update: [GitHubWebhookEventUpdateWithWhereUniqueWithoutRepositoryInput!]
  updateMany: [GitHubWebhookEventUpdateManyWithWhereNestedInput!]
  deleteMany: [GitHubWebhookEventScalarWhereInput!]
  upsert: [GitHubWebhookEventUpsertWithWhereUniqueWithoutRepositoryInput!]
}

input GitHubWebhookEventUpdateManyWithWhereNestedInput {
  where: GitHubWebhookEventScalarWhereInput!
  data: GitHubWebhookEventUpdateManyDataInput!
}

input GitHubWebhookEventUpdateWithoutRepositoryDataInput {
  eventType: String
  action: String
  sender: String
}

input GitHubWebhookEventUpdateWithWhereUniqueWithoutRepositoryInput {
  where: GitHubWebhookEventWhereUniqueInput!
  data: GitHubWebhookEventUpdateWithoutRepositoryDataInput!
}

input GitHubWebhookEventUpsertWithWhereUniqueWithoutRepositoryInput {
  where: GitHubWebhookEventWhereUniqueInput!
  update: GitHubWebhookEventUpdateWithoutRepositoryDataInput!
  create: GitHubWebhookEventCreateWithoutRepositoryInput!
}

input GitHubWebhookEventWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [GitHubWebhookEventWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [GitHubWebhookEventWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [GitHubWebhookEventWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  eventType: String

  """
  All values that are not equal to given value.
  """
  eventType_not: String

  """
  All values that are contained in given list.
  """
  eventType_in: [String!]

  """
  All values that are not contained in given list.
  """
  eventType_not_in: [String!]

  """
  All values less than the given value.
  """
  eventType_lt: String

  """
  All values less than or equal the given value.
  """
  eventType_lte: String

  """
  All values greater than the given value.
  """
  eventType_gt: String

  """
  All values greater than or equal the given value.
  """
  eventType_gte: String

  """
  All values containing the given string.
  """
  eventType_contains: String

  """
  All values not containing the given string.
  """
  eventType_not_contains: String

  """
  All values starting with the given string.
  """
  eventType_starts_with: String

  """
  All values not starting with the given string.
  """
  eventType_not_starts_with: String

  """
  All values ending with the given string.
  """
  eventType_ends_with: String

  """
  All values not ending with the given string.
  """
  eventType_not_ends_with: String
  action: String

  """
  All values that are not equal to given value.
  """
  action_not: String

  """
  All values that are contained in given list.
  """
  action_in: [String!]

  """
  All values that are not contained in given list.
  """
  action_not_in: [String!]

  """
  All values less than the given value.
  """
  action_lt: String

  """
  All values less than or equal the given value.
  """
  action_lte: String

  """
  All values greater than the given value.
  """
  action_gt: String

  """
  All values greater than or equal the given value.
  """
  action_gte: String

  """
  All values containing the given string.
  """
  action_contains: String

  """
  All values not containing the given string.
  """
  action_not_contains: String

  """
  All values starting with the given string.
  """
  action_starts_with: String

  """
  All values not starting with the given string.
  """
  action_not_starts_with: String

  """
  All values ending with the given string.
  """
  action_ends_with: String

  """
  All values not ending with the given string.
  """
  action_not_ends_with: String
  sender: String

  """
  All values that are not equal to given value.
  """
  sender_not: String

  """
  All values that are contained in given list.
  """
  sender_in: [String!]

  """
  All values that are not contained in given list.
  """
  sender_not_in: [String!]

  """
  All values less than the given value.
  """
  sender_lt: String

  """
  All values less than or equal the given value.
  """
  sender_lte: String

  """
  All values greater than the given value.
  """
  sender_gt: String

  """
  All values greater than or equal the given value.
  """
  sender_gte: String

  """
  All values containing the given string.
  """
  sender_contains: String

  """
  All values not containing the given string.
  """
  sender_not_contains: String

  """
  All values starting with the given string.
  """
  sender_starts_with: String

  """
  All values not starting with the given string.
  """
  sender_not_starts_with: String

  """
  All values ending with the given string.
  """
  sender_ends_with: String

  """
  All values not ending with the given string.
  """
  sender_not_ends_with: String
  repository: RepositoryWhereInput
}

input GitHubWebhookEventWhereUniqueInput {
  id: ID
}

"""
Raw JSON value
"""
scalar Json

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createAppKey(data: AppKeyCreateInput!): AppKey!
  createRepository(data: RepositoryCreateInput!): Repository!
  createGitHubWebhookEvent(
    data: GitHubWebhookEventCreateInput!
  ): GitHubWebhookEvent!
  createGame(data: GameCreateInput!): Game!
  createGitHubBranch(data: GitHubBranchCreateInput!): GitHubBranch!
  createGitHubReviewThread(
    data: GitHubReviewThreadCreateInput!
  ): GitHubReviewThread!
  createGitHubPullRequestReview(
    data: GitHubPullRequestReviewCreateInput!
  ): GitHubPullRequestReview!
  createGitHubComment(data: GitHubCommentCreateInput!): GitHubComment!
  createGitHubReviewRequest(
    data: GitHubReviewRequestCreateInput!
  ): GitHubReviewRequest!
  createGitHubTopic(data: GitHubTopicCreateInput!): GitHubTopic!
  createGitHubIssue(data: GitHubIssueCreateInput!): GitHubIssue!
  createGitHubRepository(data: GitHubRepositoryCreateInput!): GitHubRepository!
  createGitHubPullRequest(
    data: GitHubPullRequestCreateInput!
  ): GitHubPullRequest!
  createGitHubCommit(data: GitHubCommitCreateInput!): GitHubCommit!
  createGitHubUser(data: GitHubUserCreateInput!): GitHubUser!
  createGitHubFileDiff(data: GitHubFileDiffCreateInput!): GitHubFileDiff!
  createGitHubLabel(data: GitHubLabelCreateInput!): GitHubLabel!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateAppKey(data: AppKeyUpdateInput!, where: AppKeyWhereUniqueInput!): AppKey
  updateRepository(
    data: RepositoryUpdateInput!
    where: RepositoryWhereUniqueInput!
  ): Repository
  updateGitHubWebhookEvent(
    data: GitHubWebhookEventUpdateInput!
    where: GitHubWebhookEventWhereUniqueInput!
  ): GitHubWebhookEvent
  updateGame(data: GameUpdateInput!, where: GameWhereUniqueInput!): Game
  updateGitHubBranch(
    data: GitHubBranchUpdateInput!
    where: GitHubBranchWhereUniqueInput!
  ): GitHubBranch
  updateGitHubReviewThread(
    data: GitHubReviewThreadUpdateInput!
    where: GitHubReviewThreadWhereUniqueInput!
  ): GitHubReviewThread
  updateGitHubPullRequestReview(
    data: GitHubPullRequestReviewUpdateInput!
    where: GitHubPullRequestReviewWhereUniqueInput!
  ): GitHubPullRequestReview
  updateGitHubComment(
    data: GitHubCommentUpdateInput!
    where: GitHubCommentWhereUniqueInput!
  ): GitHubComment
  updateGitHubReviewRequest(
    data: GitHubReviewRequestUpdateInput!
    where: GitHubReviewRequestWhereUniqueInput!
  ): GitHubReviewRequest
  updateGitHubTopic(
    data: GitHubTopicUpdateInput!
    where: GitHubTopicWhereUniqueInput!
  ): GitHubTopic
  updateGitHubIssue(
    data: GitHubIssueUpdateInput!
    where: GitHubIssueWhereUniqueInput!
  ): GitHubIssue
  updateGitHubRepository(
    data: GitHubRepositoryUpdateInput!
    where: GitHubRepositoryWhereUniqueInput!
  ): GitHubRepository
  updateGitHubPullRequest(
    data: GitHubPullRequestUpdateInput!
    where: GitHubPullRequestWhereUniqueInput!
  ): GitHubPullRequest
  updateGitHubCommit(
    data: GitHubCommitUpdateInput!
    where: GitHubCommitWhereUniqueInput!
  ): GitHubCommit
  updateGitHubUser(
    data: GitHubUserUpdateInput!
    where: GitHubUserWhereUniqueInput!
  ): GitHubUser
  updateGitHubFileDiff(
    data: GitHubFileDiffUpdateInput!
    where: GitHubFileDiffWhereUniqueInput!
  ): GitHubFileDiff
  updateGitHubLabel(
    data: GitHubLabelUpdateInput!
    where: GitHubLabelWhereUniqueInput!
  ): GitHubLabel
  deleteUser(where: UserWhereUniqueInput!): User
  deleteAppKey(where: AppKeyWhereUniqueInput!): AppKey
  deleteRepository(where: RepositoryWhereUniqueInput!): Repository
  deleteGitHubWebhookEvent(
    where: GitHubWebhookEventWhereUniqueInput!
  ): GitHubWebhookEvent
  deleteGame(where: GameWhereUniqueInput!): Game
  deleteGitHubBranch(where: GitHubBranchWhereUniqueInput!): GitHubBranch
  deleteGitHubReviewThread(
    where: GitHubReviewThreadWhereUniqueInput!
  ): GitHubReviewThread
  deleteGitHubPullRequestReview(
    where: GitHubPullRequestReviewWhereUniqueInput!
  ): GitHubPullRequestReview
  deleteGitHubComment(where: GitHubCommentWhereUniqueInput!): GitHubComment
  deleteGitHubReviewRequest(
    where: GitHubReviewRequestWhereUniqueInput!
  ): GitHubReviewRequest
  deleteGitHubTopic(where: GitHubTopicWhereUniqueInput!): GitHubTopic
  deleteGitHubIssue(where: GitHubIssueWhereUniqueInput!): GitHubIssue
  deleteGitHubRepository(
    where: GitHubRepositoryWhereUniqueInput!
  ): GitHubRepository
  deleteGitHubPullRequest(
    where: GitHubPullRequestWhereUniqueInput!
  ): GitHubPullRequest
  deleteGitHubCommit(where: GitHubCommitWhereUniqueInput!): GitHubCommit
  deleteGitHubUser(where: GitHubUserWhereUniqueInput!): GitHubUser
  deleteGitHubFileDiff(where: GitHubFileDiffWhereUniqueInput!): GitHubFileDiff
  deleteGitHubLabel(where: GitHubLabelWhereUniqueInput!): GitHubLabel
  upsertUser(
    where: UserWhereUniqueInput!
    create: UserCreateInput!
    update: UserUpdateInput!
  ): User!
  upsertAppKey(
    where: AppKeyWhereUniqueInput!
    create: AppKeyCreateInput!
    update: AppKeyUpdateInput!
  ): AppKey!
  upsertRepository(
    where: RepositoryWhereUniqueInput!
    create: RepositoryCreateInput!
    update: RepositoryUpdateInput!
  ): Repository!
  upsertGitHubWebhookEvent(
    where: GitHubWebhookEventWhereUniqueInput!
    create: GitHubWebhookEventCreateInput!
    update: GitHubWebhookEventUpdateInput!
  ): GitHubWebhookEvent!
  upsertGame(
    where: GameWhereUniqueInput!
    create: GameCreateInput!
    update: GameUpdateInput!
  ): Game!
  upsertGitHubBranch(
    where: GitHubBranchWhereUniqueInput!
    create: GitHubBranchCreateInput!
    update: GitHubBranchUpdateInput!
  ): GitHubBranch!
  upsertGitHubReviewThread(
    where: GitHubReviewThreadWhereUniqueInput!
    create: GitHubReviewThreadCreateInput!
    update: GitHubReviewThreadUpdateInput!
  ): GitHubReviewThread!
  upsertGitHubPullRequestReview(
    where: GitHubPullRequestReviewWhereUniqueInput!
    create: GitHubPullRequestReviewCreateInput!
    update: GitHubPullRequestReviewUpdateInput!
  ): GitHubPullRequestReview!
  upsertGitHubComment(
    where: GitHubCommentWhereUniqueInput!
    create: GitHubCommentCreateInput!
    update: GitHubCommentUpdateInput!
  ): GitHubComment!
  upsertGitHubReviewRequest(
    where: GitHubReviewRequestWhereUniqueInput!
    create: GitHubReviewRequestCreateInput!
    update: GitHubReviewRequestUpdateInput!
  ): GitHubReviewRequest!
  upsertGitHubTopic(
    where: GitHubTopicWhereUniqueInput!
    create: GitHubTopicCreateInput!
    update: GitHubTopicUpdateInput!
  ): GitHubTopic!
  upsertGitHubIssue(
    where: GitHubIssueWhereUniqueInput!
    create: GitHubIssueCreateInput!
    update: GitHubIssueUpdateInput!
  ): GitHubIssue!
  upsertGitHubRepository(
    where: GitHubRepositoryWhereUniqueInput!
    create: GitHubRepositoryCreateInput!
    update: GitHubRepositoryUpdateInput!
  ): GitHubRepository!
  upsertGitHubPullRequest(
    where: GitHubPullRequestWhereUniqueInput!
    create: GitHubPullRequestCreateInput!
    update: GitHubPullRequestUpdateInput!
  ): GitHubPullRequest!
  upsertGitHubCommit(
    where: GitHubCommitWhereUniqueInput!
    create: GitHubCommitCreateInput!
    update: GitHubCommitUpdateInput!
  ): GitHubCommit!
  upsertGitHubUser(
    where: GitHubUserWhereUniqueInput!
    create: GitHubUserCreateInput!
    update: GitHubUserUpdateInput!
  ): GitHubUser!
  upsertGitHubFileDiff(
    where: GitHubFileDiffWhereUniqueInput!
    create: GitHubFileDiffCreateInput!
    update: GitHubFileDiffUpdateInput!
  ): GitHubFileDiff!
  upsertGitHubLabel(
    where: GitHubLabelWhereUniqueInput!
    create: GitHubLabelCreateInput!
    update: GitHubLabelUpdateInput!
  ): GitHubLabel!
  updateManyUsers(
    data: UserUpdateManyMutationInput!
    where: UserWhereInput
  ): BatchPayload!
  updateManyAppKeys(
    data: AppKeyUpdateManyMutationInput!
    where: AppKeyWhereInput
  ): BatchPayload!
  updateManyRepositories(
    data: RepositoryUpdateManyMutationInput!
    where: RepositoryWhereInput
  ): BatchPayload!
  updateManyGitHubWebhookEvents(
    data: GitHubWebhookEventUpdateManyMutationInput!
    where: GitHubWebhookEventWhereInput
  ): BatchPayload!
  updateManyGames(
    data: GameUpdateManyMutationInput!
    where: GameWhereInput
  ): BatchPayload!
  updateManyGitHubBranches(
    data: GitHubBranchUpdateManyMutationInput!
    where: GitHubBranchWhereInput
  ): BatchPayload!
  updateManyGitHubReviewThreads(
    data: GitHubReviewThreadUpdateManyMutationInput!
    where: GitHubReviewThreadWhereInput
  ): BatchPayload!
  updateManyGitHubPullRequestReviews(
    data: GitHubPullRequestReviewUpdateManyMutationInput!
    where: GitHubPullRequestReviewWhereInput
  ): BatchPayload!
  updateManyGitHubComments(
    data: GitHubCommentUpdateManyMutationInput!
    where: GitHubCommentWhereInput
  ): BatchPayload!
  updateManyGitHubTopics(
    data: GitHubTopicUpdateManyMutationInput!
    where: GitHubTopicWhereInput
  ): BatchPayload!
  updateManyGitHubIssues(
    data: GitHubIssueUpdateManyMutationInput!
    where: GitHubIssueWhereInput
  ): BatchPayload!
  updateManyGitHubRepositories(
    data: GitHubRepositoryUpdateManyMutationInput!
    where: GitHubRepositoryWhereInput
  ): BatchPayload!
  updateManyGitHubPullRequests(
    data: GitHubPullRequestUpdateManyMutationInput!
    where: GitHubPullRequestWhereInput
  ): BatchPayload!
  updateManyGitHubCommits(
    data: GitHubCommitUpdateManyMutationInput!
    where: GitHubCommitWhereInput
  ): BatchPayload!
  updateManyGitHubUsers(
    data: GitHubUserUpdateManyMutationInput!
    where: GitHubUserWhereInput
  ): BatchPayload!
  updateManyGitHubFileDiffs(
    data: GitHubFileDiffUpdateManyMutationInput!
    where: GitHubFileDiffWhereInput
  ): BatchPayload!
  updateManyGitHubLabels(
    data: GitHubLabelUpdateManyMutationInput!
    where: GitHubLabelWhereInput
  ): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyAppKeys(where: AppKeyWhereInput): BatchPayload!
  deleteManyRepositories(where: RepositoryWhereInput): BatchPayload!
  deleteManyGitHubWebhookEvents(
    where: GitHubWebhookEventWhereInput
  ): BatchPayload!
  deleteManyGames(where: GameWhereInput): BatchPayload!
  deleteManyGitHubBranches(where: GitHubBranchWhereInput): BatchPayload!
  deleteManyGitHubReviewThreads(
    where: GitHubReviewThreadWhereInput
  ): BatchPayload!
  deleteManyGitHubPullRequestReviews(
    where: GitHubPullRequestReviewWhereInput
  ): BatchPayload!
  deleteManyGitHubComments(where: GitHubCommentWhereInput): BatchPayload!
  deleteManyGitHubReviewRequests(
    where: GitHubReviewRequestWhereInput
  ): BatchPayload!
  deleteManyGitHubTopics(where: GitHubTopicWhereInput): BatchPayload!
  deleteManyGitHubIssues(where: GitHubIssueWhereInput): BatchPayload!
  deleteManyGitHubRepositories(where: GitHubRepositoryWhereInput): BatchPayload!
  deleteManyGitHubPullRequests(
    where: GitHubPullRequestWhereInput
  ): BatchPayload!
  deleteManyGitHubCommits(where: GitHubCommitWhereInput): BatchPayload!
  deleteManyGitHubUsers(where: GitHubUserWhereInput): BatchPayload!
  deleteManyGitHubFileDiffs(where: GitHubFileDiffWhereInput): BatchPayload!
  deleteManyGitHubLabels(where: GitHubLabelWhereInput): BatchPayload!
  executeRaw(database: PrismaDatabase, query: String!): Json!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String

  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

enum PrismaDatabase {
  default
}

type Query {
  users(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [User]!
  appKeys(
    where: AppKeyWhereInput
    orderBy: AppKeyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [AppKey]!
  repositories(
    where: RepositoryWhereInput
    orderBy: RepositoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Repository]!
  gitHubWebhookEvents(
    where: GitHubWebhookEventWhereInput
    orderBy: GitHubWebhookEventOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubWebhookEvent]!
  games(
    where: GameWhereInput
    orderBy: GameOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Game]!
  gitHubBranches(
    where: GitHubBranchWhereInput
    orderBy: GitHubBranchOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubBranch]!
  gitHubReviewThreads(
    where: GitHubReviewThreadWhereInput
    orderBy: GitHubReviewThreadOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubReviewThread]!
  gitHubPullRequestReviews(
    where: GitHubPullRequestReviewWhereInput
    orderBy: GitHubPullRequestReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubPullRequestReview]!
  gitHubComments(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubComment]!
  gitHubReviewRequests(
    where: GitHubReviewRequestWhereInput
    orderBy: GitHubReviewRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubReviewRequest]!
  gitHubTopics(
    where: GitHubTopicWhereInput
    orderBy: GitHubTopicOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubTopic]!
  gitHubIssues(
    where: GitHubIssueWhereInput
    orderBy: GitHubIssueOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubIssue]!
  gitHubRepositories(
    where: GitHubRepositoryWhereInput
    orderBy: GitHubRepositoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubRepository]!
  gitHubPullRequests(
    where: GitHubPullRequestWhereInput
    orderBy: GitHubPullRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubPullRequest]!
  gitHubCommits(
    where: GitHubCommitWhereInput
    orderBy: GitHubCommitOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubCommit]!
  gitHubUsers(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubUser]!
  gitHubFileDiffs(
    where: GitHubFileDiffWhereInput
    orderBy: GitHubFileDiffOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubFileDiff]!
  gitHubLabels(
    where: GitHubLabelWhereInput
    orderBy: GitHubLabelOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubLabel]!
  user(where: UserWhereUniqueInput!): User
  appKey(where: AppKeyWhereUniqueInput!): AppKey
  repository(where: RepositoryWhereUniqueInput!): Repository
  gitHubWebhookEvent(
    where: GitHubWebhookEventWhereUniqueInput!
  ): GitHubWebhookEvent
  game(where: GameWhereUniqueInput!): Game
  gitHubBranch(where: GitHubBranchWhereUniqueInput!): GitHubBranch
  gitHubReviewThread(
    where: GitHubReviewThreadWhereUniqueInput!
  ): GitHubReviewThread
  gitHubPullRequestReview(
    where: GitHubPullRequestReviewWhereUniqueInput!
  ): GitHubPullRequestReview
  gitHubComment(where: GitHubCommentWhereUniqueInput!): GitHubComment
  gitHubReviewRequest(
    where: GitHubReviewRequestWhereUniqueInput!
  ): GitHubReviewRequest
  gitHubTopic(where: GitHubTopicWhereUniqueInput!): GitHubTopic
  gitHubIssue(where: GitHubIssueWhereUniqueInput!): GitHubIssue
  gitHubRepository(where: GitHubRepositoryWhereUniqueInput!): GitHubRepository
  gitHubPullRequest(
    where: GitHubPullRequestWhereUniqueInput!
  ): GitHubPullRequest
  gitHubCommit(where: GitHubCommitWhereUniqueInput!): GitHubCommit
  gitHubUser(where: GitHubUserWhereUniqueInput!): GitHubUser
  gitHubFileDiff(where: GitHubFileDiffWhereUniqueInput!): GitHubFileDiff
  gitHubLabel(where: GitHubLabelWhereUniqueInput!): GitHubLabel
  usersConnection(
    where: UserWhereInput
    orderBy: UserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): UserConnection!
  appKeysConnection(
    where: AppKeyWhereInput
    orderBy: AppKeyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): AppKeyConnection!
  repositoriesConnection(
    where: RepositoryWhereInput
    orderBy: RepositoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): RepositoryConnection!
  gitHubWebhookEventsConnection(
    where: GitHubWebhookEventWhereInput
    orderBy: GitHubWebhookEventOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubWebhookEventConnection!
  gamesConnection(
    where: GameWhereInput
    orderBy: GameOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GameConnection!
  gitHubBranchesConnection(
    where: GitHubBranchWhereInput
    orderBy: GitHubBranchOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubBranchConnection!
  gitHubReviewThreadsConnection(
    where: GitHubReviewThreadWhereInput
    orderBy: GitHubReviewThreadOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubReviewThreadConnection!
  gitHubPullRequestReviewsConnection(
    where: GitHubPullRequestReviewWhereInput
    orderBy: GitHubPullRequestReviewOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubPullRequestReviewConnection!
  gitHubCommentsConnection(
    where: GitHubCommentWhereInput
    orderBy: GitHubCommentOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubCommentConnection!
  gitHubReviewRequestsConnection(
    where: GitHubReviewRequestWhereInput
    orderBy: GitHubReviewRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubReviewRequestConnection!
  gitHubTopicsConnection(
    where: GitHubTopicWhereInput
    orderBy: GitHubTopicOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubTopicConnection!
  gitHubIssuesConnection(
    where: GitHubIssueWhereInput
    orderBy: GitHubIssueOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubIssueConnection!
  gitHubRepositoriesConnection(
    where: GitHubRepositoryWhereInput
    orderBy: GitHubRepositoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubRepositoryConnection!
  gitHubPullRequestsConnection(
    where: GitHubPullRequestWhereInput
    orderBy: GitHubPullRequestOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubPullRequestConnection!
  gitHubCommitsConnection(
    where: GitHubCommitWhereInput
    orderBy: GitHubCommitOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubCommitConnection!
  gitHubUsersConnection(
    where: GitHubUserWhereInput
    orderBy: GitHubUserOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubUserConnection!
  gitHubFileDiffsConnection(
    where: GitHubFileDiffWhereInput
    orderBy: GitHubFileDiffOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubFileDiffConnection!
  gitHubLabelsConnection(
    where: GitHubLabelWhereInput
    orderBy: GitHubLabelOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): GitHubLabelConnection!

  """
  Fetches an object given its ID
  """
  node(
    """
    The ID of an object
    """
    id: ID!
  ): Node
}

type Repository implements Node {
  id: ID!
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  addedBy: User!
  name: String!
  description: String!
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  appKey: AppKey!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  webhookEvents(
    where: GitHubWebhookEventWhereInput
    orderBy: GitHubWebhookEventOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [GitHubWebhookEvent!]
  game: Game
}

"""
A connection to a list of items.
"""
type RepositoryConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [RepositoryEdge]!
  aggregate: AggregateRepository!
}

input RepositoryCreateInput {
  id: ID
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  name: String!
  description: String
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserCreateOneWithoutAddedRepositoriesInput!
  appKey: AppKeyCreateOneWithoutRepositoriesInput!
  webhookEvents: GitHubWebhookEventCreateManyWithoutRepositoryInput
  game: GameCreateOneWithoutRepositoryInput
}

input RepositoryCreateManyWithoutAddedByInput {
  create: [RepositoryCreateWithoutAddedByInput!]
  connect: [RepositoryWhereUniqueInput!]
}

input RepositoryCreateManyWithoutAppKeyInput {
  create: [RepositoryCreateWithoutAppKeyInput!]
  connect: [RepositoryWhereUniqueInput!]
}

input RepositoryCreateOneWithoutGameInput {
  create: RepositoryCreateWithoutGameInput
  connect: RepositoryWhereUniqueInput
}

input RepositoryCreateOneWithoutWebhookEventsInput {
  create: RepositoryCreateWithoutWebhookEventsInput
  connect: RepositoryWhereUniqueInput
}

input RepositoryCreateWithoutAddedByInput {
  id: ID
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  name: String!
  description: String
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  appKey: AppKeyCreateOneWithoutRepositoriesInput!
  webhookEvents: GitHubWebhookEventCreateManyWithoutRepositoryInput
  game: GameCreateOneWithoutRepositoryInput
}

input RepositoryCreateWithoutAppKeyInput {
  id: ID
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  name: String!
  description: String
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserCreateOneWithoutAddedRepositoriesInput!
  webhookEvents: GitHubWebhookEventCreateManyWithoutRepositoryInput
  game: GameCreateOneWithoutRepositoryInput
}

input RepositoryCreateWithoutGameInput {
  id: ID
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  name: String!
  description: String
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserCreateOneWithoutAddedRepositoriesInput!
  appKey: AppKeyCreateOneWithoutRepositoriesInput!
  webhookEvents: GitHubWebhookEventCreateManyWithoutRepositoryInput
}

input RepositoryCreateWithoutWebhookEventsInput {
  id: ID
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  name: String!
  description: String
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserCreateOneWithoutAddedRepositoriesInput!
  appKey: AppKeyCreateOneWithoutRepositoriesInput!
  game: GameCreateOneWithoutRepositoryInput
}

"""
An edge in a connection.
"""
type RepositoryEdge {
  """
  The item at the end of the edge.
  """
  node: Repository!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum RepositoryOrderByInput {
  id_ASC
  id_DESC
  idExternal_ASC
  idExternal_DESC
  createdAtExternal_ASC
  createdAtExternal_DESC
  updatedAtExternal_ASC
  updatedAtExternal_DESC
  name_ASC
  name_DESC
  description_ASC
  description_DESC
  homepageUrl_ASC
  homepageUrl_DESC
  url_ASC
  url_DESC
  owner_ASC
  owner_DESC
  isTracked_ASC
  isTracked_DESC
  isFork_ASC
  isFork_DESC
  isLocked_ASC
  isLocked_DESC
  isPrivate_ASC
  isPrivate_DESC
  isArchived_ASC
  isArchived_DESC
  isDisabled_ASC
  isDisabled_DESC
  sshUrl_ASC
  sshUrl_DESC
  stargazers_ASC
  stargazers_DESC
  collaborators_ASC
  collaborators_DESC
  watchers_ASC
  watchers_DESC
  issues_ASC
  issues_DESC
  pullRequests_ASC
  pullRequests_DESC
}

type RepositoryPreviousValues {
  id: ID!
  idExternal: String!
  createdAtExternal: DateTime!
  updatedAtExternal: DateTime!
  name: String!
  description: String!
  homepageUrl: String
  url: String!
  owner: String!
  isTracked: Boolean!
  isFork: Boolean!
  isLocked: Boolean!
  isPrivate: Boolean!
  isArchived: Boolean!
  isDisabled: Boolean!
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
}

input RepositoryScalarWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RepositoryScalarWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [RepositoryScalarWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RepositoryScalarWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  idExternal: String

  """
  All values that are not equal to given value.
  """
  idExternal_not: String

  """
  All values that are contained in given list.
  """
  idExternal_in: [String!]

  """
  All values that are not contained in given list.
  """
  idExternal_not_in: [String!]

  """
  All values less than the given value.
  """
  idExternal_lt: String

  """
  All values less than or equal the given value.
  """
  idExternal_lte: String

  """
  All values greater than the given value.
  """
  idExternal_gt: String

  """
  All values greater than or equal the given value.
  """
  idExternal_gte: String

  """
  All values containing the given string.
  """
  idExternal_contains: String

  """
  All values not containing the given string.
  """
  idExternal_not_contains: String

  """
  All values starting with the given string.
  """
  idExternal_starts_with: String

  """
  All values not starting with the given string.
  """
  idExternal_not_starts_with: String

  """
  All values ending with the given string.
  """
  idExternal_ends_with: String

  """
  All values not ending with the given string.
  """
  idExternal_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  homepageUrl: String

  """
  All values that are not equal to given value.
  """
  homepageUrl_not: String

  """
  All values that are contained in given list.
  """
  homepageUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  homepageUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  homepageUrl_lt: String

  """
  All values less than or equal the given value.
  """
  homepageUrl_lte: String

  """
  All values greater than the given value.
  """
  homepageUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  homepageUrl_gte: String

  """
  All values containing the given string.
  """
  homepageUrl_contains: String

  """
  All values not containing the given string.
  """
  homepageUrl_not_contains: String

  """
  All values starting with the given string.
  """
  homepageUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  homepageUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  homepageUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  homepageUrl_not_ends_with: String
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  owner: String

  """
  All values that are not equal to given value.
  """
  owner_not: String

  """
  All values that are contained in given list.
  """
  owner_in: [String!]

  """
  All values that are not contained in given list.
  """
  owner_not_in: [String!]

  """
  All values less than the given value.
  """
  owner_lt: String

  """
  All values less than or equal the given value.
  """
  owner_lte: String

  """
  All values greater than the given value.
  """
  owner_gt: String

  """
  All values greater than or equal the given value.
  """
  owner_gte: String

  """
  All values containing the given string.
  """
  owner_contains: String

  """
  All values not containing the given string.
  """
  owner_not_contains: String

  """
  All values starting with the given string.
  """
  owner_starts_with: String

  """
  All values not starting with the given string.
  """
  owner_not_starts_with: String

  """
  All values ending with the given string.
  """
  owner_ends_with: String

  """
  All values not ending with the given string.
  """
  owner_not_ends_with: String
  isTracked: Boolean

  """
  All values that are not equal to given value.
  """
  isTracked_not: Boolean
  isFork: Boolean

  """
  All values that are not equal to given value.
  """
  isFork_not: Boolean
  isLocked: Boolean

  """
  All values that are not equal to given value.
  """
  isLocked_not: Boolean
  isPrivate: Boolean

  """
  All values that are not equal to given value.
  """
  isPrivate_not: Boolean
  isArchived: Boolean

  """
  All values that are not equal to given value.
  """
  isArchived_not: Boolean
  isDisabled: Boolean

  """
  All values that are not equal to given value.
  """
  isDisabled_not: Boolean
  sshUrl: String

  """
  All values that are not equal to given value.
  """
  sshUrl_not: String

  """
  All values that are contained in given list.
  """
  sshUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  sshUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  sshUrl_lt: String

  """
  All values less than or equal the given value.
  """
  sshUrl_lte: String

  """
  All values greater than the given value.
  """
  sshUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  sshUrl_gte: String

  """
  All values containing the given string.
  """
  sshUrl_contains: String

  """
  All values not containing the given string.
  """
  sshUrl_not_contains: String

  """
  All values starting with the given string.
  """
  sshUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  sshUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  sshUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  sshUrl_not_ends_with: String
  stargazers: Int

  """
  All values that are not equal to given value.
  """
  stargazers_not: Int

  """
  All values that are contained in given list.
  """
  stargazers_in: [Int!]

  """
  All values that are not contained in given list.
  """
  stargazers_not_in: [Int!]

  """
  All values less than the given value.
  """
  stargazers_lt: Int

  """
  All values less than or equal the given value.
  """
  stargazers_lte: Int

  """
  All values greater than the given value.
  """
  stargazers_gt: Int

  """
  All values greater than or equal the given value.
  """
  stargazers_gte: Int
  collaborators: Int

  """
  All values that are not equal to given value.
  """
  collaborators_not: Int

  """
  All values that are contained in given list.
  """
  collaborators_in: [Int!]

  """
  All values that are not contained in given list.
  """
  collaborators_not_in: [Int!]

  """
  All values less than the given value.
  """
  collaborators_lt: Int

  """
  All values less than or equal the given value.
  """
  collaborators_lte: Int

  """
  All values greater than the given value.
  """
  collaborators_gt: Int

  """
  All values greater than or equal the given value.
  """
  collaborators_gte: Int
  watchers: Int

  """
  All values that are not equal to given value.
  """
  watchers_not: Int

  """
  All values that are contained in given list.
  """
  watchers_in: [Int!]

  """
  All values that are not contained in given list.
  """
  watchers_not_in: [Int!]

  """
  All values less than the given value.
  """
  watchers_lt: Int

  """
  All values less than or equal the given value.
  """
  watchers_lte: Int

  """
  All values greater than the given value.
  """
  watchers_gt: Int

  """
  All values greater than or equal the given value.
  """
  watchers_gte: Int
  issues: Int

  """
  All values that are not equal to given value.
  """
  issues_not: Int

  """
  All values that are contained in given list.
  """
  issues_in: [Int!]

  """
  All values that are not contained in given list.
  """
  issues_not_in: [Int!]

  """
  All values less than the given value.
  """
  issues_lt: Int

  """
  All values less than or equal the given value.
  """
  issues_lte: Int

  """
  All values greater than the given value.
  """
  issues_gt: Int

  """
  All values greater than or equal the given value.
  """
  issues_gte: Int
  pullRequests: Int

  """
  All values that are not equal to given value.
  """
  pullRequests_not: Int

  """
  All values that are contained in given list.
  """
  pullRequests_in: [Int!]

  """
  All values that are not contained in given list.
  """
  pullRequests_not_in: [Int!]

  """
  All values less than the given value.
  """
  pullRequests_lt: Int

  """
  All values less than or equal the given value.
  """
  pullRequests_lte: Int

  """
  All values greater than the given value.
  """
  pullRequests_gt: Int

  """
  All values greater than or equal the given value.
  """
  pullRequests_gte: Int
}

type RepositorySubscriptionPayload {
  mutation: MutationType!
  node: Repository
  updatedFields: [String!]
  previousValues: RepositoryPreviousValues
}

input RepositorySubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RepositorySubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [RepositorySubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RepositorySubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: RepositoryWhereInput
}

input RepositoryUpdateInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserUpdateOneRequiredWithoutAddedRepositoriesInput
  appKey: AppKeyUpdateOneRequiredWithoutRepositoriesInput
  webhookEvents: GitHubWebhookEventUpdateManyWithoutRepositoryInput
  game: GameUpdateOneWithoutRepositoryInput
}

input RepositoryUpdateManyDataInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
}

input RepositoryUpdateManyMutationInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
}

input RepositoryUpdateManyWithoutAddedByInput {
  create: [RepositoryCreateWithoutAddedByInput!]
  connect: [RepositoryWhereUniqueInput!]
  set: [RepositoryWhereUniqueInput!]
  disconnect: [RepositoryWhereUniqueInput!]
  delete: [RepositoryWhereUniqueInput!]
  update: [RepositoryUpdateWithWhereUniqueWithoutAddedByInput!]
  updateMany: [RepositoryUpdateManyWithWhereNestedInput!]
  deleteMany: [RepositoryScalarWhereInput!]
  upsert: [RepositoryUpsertWithWhereUniqueWithoutAddedByInput!]
}

input RepositoryUpdateManyWithoutAppKeyInput {
  create: [RepositoryCreateWithoutAppKeyInput!]
  connect: [RepositoryWhereUniqueInput!]
  set: [RepositoryWhereUniqueInput!]
  disconnect: [RepositoryWhereUniqueInput!]
  delete: [RepositoryWhereUniqueInput!]
  update: [RepositoryUpdateWithWhereUniqueWithoutAppKeyInput!]
  updateMany: [RepositoryUpdateManyWithWhereNestedInput!]
  deleteMany: [RepositoryScalarWhereInput!]
  upsert: [RepositoryUpsertWithWhereUniqueWithoutAppKeyInput!]
}

input RepositoryUpdateManyWithWhereNestedInput {
  where: RepositoryScalarWhereInput!
  data: RepositoryUpdateManyDataInput!
}

input RepositoryUpdateOneRequiredWithoutGameInput {
  create: RepositoryCreateWithoutGameInput
  connect: RepositoryWhereUniqueInput
  update: RepositoryUpdateWithoutGameDataInput
  upsert: RepositoryUpsertWithoutGameInput
}

input RepositoryUpdateOneRequiredWithoutWebhookEventsInput {
  create: RepositoryCreateWithoutWebhookEventsInput
  connect: RepositoryWhereUniqueInput
  update: RepositoryUpdateWithoutWebhookEventsDataInput
  upsert: RepositoryUpsertWithoutWebhookEventsInput
}

input RepositoryUpdateWithoutAddedByDataInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  appKey: AppKeyUpdateOneRequiredWithoutRepositoriesInput
  webhookEvents: GitHubWebhookEventUpdateManyWithoutRepositoryInput
  game: GameUpdateOneWithoutRepositoryInput
}

input RepositoryUpdateWithoutAppKeyDataInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserUpdateOneRequiredWithoutAddedRepositoriesInput
  webhookEvents: GitHubWebhookEventUpdateManyWithoutRepositoryInput
  game: GameUpdateOneWithoutRepositoryInput
}

input RepositoryUpdateWithoutGameDataInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserUpdateOneRequiredWithoutAddedRepositoriesInput
  appKey: AppKeyUpdateOneRequiredWithoutRepositoriesInput
  webhookEvents: GitHubWebhookEventUpdateManyWithoutRepositoryInput
}

input RepositoryUpdateWithoutWebhookEventsDataInput {
  idExternal: String
  createdAtExternal: DateTime
  updatedAtExternal: DateTime
  name: String
  description: String
  homepageUrl: String
  url: String
  owner: String
  isTracked: Boolean
  isFork: Boolean
  isLocked: Boolean
  isPrivate: Boolean
  isArchived: Boolean
  isDisabled: Boolean
  sshUrl: String
  stargazers: Int
  collaborators: Int
  watchers: Int
  issues: Int
  pullRequests: Int
  addedBy: UserUpdateOneRequiredWithoutAddedRepositoriesInput
  appKey: AppKeyUpdateOneRequiredWithoutRepositoriesInput
  game: GameUpdateOneWithoutRepositoryInput
}

input RepositoryUpdateWithWhereUniqueWithoutAddedByInput {
  where: RepositoryWhereUniqueInput!
  data: RepositoryUpdateWithoutAddedByDataInput!
}

input RepositoryUpdateWithWhereUniqueWithoutAppKeyInput {
  where: RepositoryWhereUniqueInput!
  data: RepositoryUpdateWithoutAppKeyDataInput!
}

input RepositoryUpsertWithoutGameInput {
  update: RepositoryUpdateWithoutGameDataInput!
  create: RepositoryCreateWithoutGameInput!
}

input RepositoryUpsertWithoutWebhookEventsInput {
  update: RepositoryUpdateWithoutWebhookEventsDataInput!
  create: RepositoryCreateWithoutWebhookEventsInput!
}

input RepositoryUpsertWithWhereUniqueWithoutAddedByInput {
  where: RepositoryWhereUniqueInput!
  update: RepositoryUpdateWithoutAddedByDataInput!
  create: RepositoryCreateWithoutAddedByInput!
}

input RepositoryUpsertWithWhereUniqueWithoutAppKeyInput {
  where: RepositoryWhereUniqueInput!
  update: RepositoryUpdateWithoutAppKeyDataInput!
  create: RepositoryCreateWithoutAppKeyInput!
}

input RepositoryWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [RepositoryWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [RepositoryWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [RepositoryWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  idExternal: String

  """
  All values that are not equal to given value.
  """
  idExternal_not: String

  """
  All values that are contained in given list.
  """
  idExternal_in: [String!]

  """
  All values that are not contained in given list.
  """
  idExternal_not_in: [String!]

  """
  All values less than the given value.
  """
  idExternal_lt: String

  """
  All values less than or equal the given value.
  """
  idExternal_lte: String

  """
  All values greater than the given value.
  """
  idExternal_gt: String

  """
  All values greater than or equal the given value.
  """
  idExternal_gte: String

  """
  All values containing the given string.
  """
  idExternal_contains: String

  """
  All values not containing the given string.
  """
  idExternal_not_contains: String

  """
  All values starting with the given string.
  """
  idExternal_starts_with: String

  """
  All values not starting with the given string.
  """
  idExternal_not_starts_with: String

  """
  All values ending with the given string.
  """
  idExternal_ends_with: String

  """
  All values not ending with the given string.
  """
  idExternal_not_ends_with: String
  createdAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  createdAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAtExternal_gte: DateTime
  updatedAtExternal: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAtExternal_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAtExternal_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAtExternal_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAtExternal_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAtExternal_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAtExternal_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAtExternal_gte: DateTime
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  description: String

  """
  All values that are not equal to given value.
  """
  description_not: String

  """
  All values that are contained in given list.
  """
  description_in: [String!]

  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]

  """
  All values less than the given value.
  """
  description_lt: String

  """
  All values less than or equal the given value.
  """
  description_lte: String

  """
  All values greater than the given value.
  """
  description_gt: String

  """
  All values greater than or equal the given value.
  """
  description_gte: String

  """
  All values containing the given string.
  """
  description_contains: String

  """
  All values not containing the given string.
  """
  description_not_contains: String

  """
  All values starting with the given string.
  """
  description_starts_with: String

  """
  All values not starting with the given string.
  """
  description_not_starts_with: String

  """
  All values ending with the given string.
  """
  description_ends_with: String

  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  homepageUrl: String

  """
  All values that are not equal to given value.
  """
  homepageUrl_not: String

  """
  All values that are contained in given list.
  """
  homepageUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  homepageUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  homepageUrl_lt: String

  """
  All values less than or equal the given value.
  """
  homepageUrl_lte: String

  """
  All values greater than the given value.
  """
  homepageUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  homepageUrl_gte: String

  """
  All values containing the given string.
  """
  homepageUrl_contains: String

  """
  All values not containing the given string.
  """
  homepageUrl_not_contains: String

  """
  All values starting with the given string.
  """
  homepageUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  homepageUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  homepageUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  homepageUrl_not_ends_with: String
  url: String

  """
  All values that are not equal to given value.
  """
  url_not: String

  """
  All values that are contained in given list.
  """
  url_in: [String!]

  """
  All values that are not contained in given list.
  """
  url_not_in: [String!]

  """
  All values less than the given value.
  """
  url_lt: String

  """
  All values less than or equal the given value.
  """
  url_lte: String

  """
  All values greater than the given value.
  """
  url_gt: String

  """
  All values greater than or equal the given value.
  """
  url_gte: String

  """
  All values containing the given string.
  """
  url_contains: String

  """
  All values not containing the given string.
  """
  url_not_contains: String

  """
  All values starting with the given string.
  """
  url_starts_with: String

  """
  All values not starting with the given string.
  """
  url_not_starts_with: String

  """
  All values ending with the given string.
  """
  url_ends_with: String

  """
  All values not ending with the given string.
  """
  url_not_ends_with: String
  owner: String

  """
  All values that are not equal to given value.
  """
  owner_not: String

  """
  All values that are contained in given list.
  """
  owner_in: [String!]

  """
  All values that are not contained in given list.
  """
  owner_not_in: [String!]

  """
  All values less than the given value.
  """
  owner_lt: String

  """
  All values less than or equal the given value.
  """
  owner_lte: String

  """
  All values greater than the given value.
  """
  owner_gt: String

  """
  All values greater than or equal the given value.
  """
  owner_gte: String

  """
  All values containing the given string.
  """
  owner_contains: String

  """
  All values not containing the given string.
  """
  owner_not_contains: String

  """
  All values starting with the given string.
  """
  owner_starts_with: String

  """
  All values not starting with the given string.
  """
  owner_not_starts_with: String

  """
  All values ending with the given string.
  """
  owner_ends_with: String

  """
  All values not ending with the given string.
  """
  owner_not_ends_with: String
  isTracked: Boolean

  """
  All values that are not equal to given value.
  """
  isTracked_not: Boolean
  isFork: Boolean

  """
  All values that are not equal to given value.
  """
  isFork_not: Boolean
  isLocked: Boolean

  """
  All values that are not equal to given value.
  """
  isLocked_not: Boolean
  isPrivate: Boolean

  """
  All values that are not equal to given value.
  """
  isPrivate_not: Boolean
  isArchived: Boolean

  """
  All values that are not equal to given value.
  """
  isArchived_not: Boolean
  isDisabled: Boolean

  """
  All values that are not equal to given value.
  """
  isDisabled_not: Boolean
  sshUrl: String

  """
  All values that are not equal to given value.
  """
  sshUrl_not: String

  """
  All values that are contained in given list.
  """
  sshUrl_in: [String!]

  """
  All values that are not contained in given list.
  """
  sshUrl_not_in: [String!]

  """
  All values less than the given value.
  """
  sshUrl_lt: String

  """
  All values less than or equal the given value.
  """
  sshUrl_lte: String

  """
  All values greater than the given value.
  """
  sshUrl_gt: String

  """
  All values greater than or equal the given value.
  """
  sshUrl_gte: String

  """
  All values containing the given string.
  """
  sshUrl_contains: String

  """
  All values not containing the given string.
  """
  sshUrl_not_contains: String

  """
  All values starting with the given string.
  """
  sshUrl_starts_with: String

  """
  All values not starting with the given string.
  """
  sshUrl_not_starts_with: String

  """
  All values ending with the given string.
  """
  sshUrl_ends_with: String

  """
  All values not ending with the given string.
  """
  sshUrl_not_ends_with: String
  stargazers: Int

  """
  All values that are not equal to given value.
  """
  stargazers_not: Int

  """
  All values that are contained in given list.
  """
  stargazers_in: [Int!]

  """
  All values that are not contained in given list.
  """
  stargazers_not_in: [Int!]

  """
  All values less than the given value.
  """
  stargazers_lt: Int

  """
  All values less than or equal the given value.
  """
  stargazers_lte: Int

  """
  All values greater than the given value.
  """
  stargazers_gt: Int

  """
  All values greater than or equal the given value.
  """
  stargazers_gte: Int
  collaborators: Int

  """
  All values that are not equal to given value.
  """
  collaborators_not: Int

  """
  All values that are contained in given list.
  """
  collaborators_in: [Int!]

  """
  All values that are not contained in given list.
  """
  collaborators_not_in: [Int!]

  """
  All values less than the given value.
  """
  collaborators_lt: Int

  """
  All values less than or equal the given value.
  """
  collaborators_lte: Int

  """
  All values greater than the given value.
  """
  collaborators_gt: Int

  """
  All values greater than or equal the given value.
  """
  collaborators_gte: Int
  watchers: Int

  """
  All values that are not equal to given value.
  """
  watchers_not: Int

  """
  All values that are contained in given list.
  """
  watchers_in: [Int!]

  """
  All values that are not contained in given list.
  """
  watchers_not_in: [Int!]

  """
  All values less than the given value.
  """
  watchers_lt: Int

  """
  All values less than or equal the given value.
  """
  watchers_lte: Int

  """
  All values greater than the given value.
  """
  watchers_gt: Int

  """
  All values greater than or equal the given value.
  """
  watchers_gte: Int
  issues: Int

  """
  All values that are not equal to given value.
  """
  issues_not: Int

  """
  All values that are contained in given list.
  """
  issues_in: [Int!]

  """
  All values that are not contained in given list.
  """
  issues_not_in: [Int!]

  """
  All values less than the given value.
  """
  issues_lt: Int

  """
  All values less than or equal the given value.
  """
  issues_lte: Int

  """
  All values greater than the given value.
  """
  issues_gt: Int

  """
  All values greater than or equal the given value.
  """
  issues_gte: Int
  pullRequests: Int

  """
  All values that are not equal to given value.
  """
  pullRequests_not: Int

  """
  All values that are contained in given list.
  """
  pullRequests_in: [Int!]

  """
  All values that are not contained in given list.
  """
  pullRequests_not_in: [Int!]

  """
  All values less than the given value.
  """
  pullRequests_lt: Int

  """
  All values less than or equal the given value.
  """
  pullRequests_lte: Int

  """
  All values greater than the given value.
  """
  pullRequests_gt: Int

  """
  All values greater than or equal the given value.
  """
  pullRequests_gte: Int
  addedBy: UserWhereInput
  appKey: AppKeyWhereInput
  webhookEvents_every: GitHubWebhookEventWhereInput
  webhookEvents_some: GitHubWebhookEventWhereInput
  webhookEvents_none: GitHubWebhookEventWhereInput
  game: GameWhereInput
}

input RepositoryWhereUniqueInput {
  id: ID
  idExternal: String
  name: String
}

enum Role {
  USER
  ADMIN
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  appKey(where: AppKeySubscriptionWhereInput): AppKeySubscriptionPayload
  repository(
    where: RepositorySubscriptionWhereInput
  ): RepositorySubscriptionPayload
  gitHubWebhookEvent(
    where: GitHubWebhookEventSubscriptionWhereInput
  ): GitHubWebhookEventSubscriptionPayload
  game(where: GameSubscriptionWhereInput): GameSubscriptionPayload
  gitHubBranch(
    where: GitHubBranchSubscriptionWhereInput
  ): GitHubBranchSubscriptionPayload
  gitHubReviewThread(
    where: GitHubReviewThreadSubscriptionWhereInput
  ): GitHubReviewThreadSubscriptionPayload
  gitHubPullRequestReview(
    where: GitHubPullRequestReviewSubscriptionWhereInput
  ): GitHubPullRequestReviewSubscriptionPayload
  gitHubComment(
    where: GitHubCommentSubscriptionWhereInput
  ): GitHubCommentSubscriptionPayload
  gitHubReviewRequest(
    where: GitHubReviewRequestSubscriptionWhereInput
  ): GitHubReviewRequestSubscriptionPayload
  gitHubTopic(
    where: GitHubTopicSubscriptionWhereInput
  ): GitHubTopicSubscriptionPayload
  gitHubIssue(
    where: GitHubIssueSubscriptionWhereInput
  ): GitHubIssueSubscriptionPayload
  gitHubRepository(
    where: GitHubRepositorySubscriptionWhereInput
  ): GitHubRepositorySubscriptionPayload
  gitHubPullRequest(
    where: GitHubPullRequestSubscriptionWhereInput
  ): GitHubPullRequestSubscriptionPayload
  gitHubCommit(
    where: GitHubCommitSubscriptionWhereInput
  ): GitHubCommitSubscriptionPayload
  gitHubUser(
    where: GitHubUserSubscriptionWhereInput
  ): GitHubUserSubscriptionPayload
  gitHubFileDiff(
    where: GitHubFileDiffSubscriptionWhereInput
  ): GitHubFileDiffSubscriptionPayload
  gitHubLabel(
    where: GitHubLabelSubscriptionWhereInput
  ): GitHubLabelSubscriptionPayload
}

type User implements Node {
  id: ID!
  email: String!
  hash: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  role: Role
  keys(
    where: AppKeyWhereInput
    orderBy: AppKeyOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [AppKey!]
  addedRepositories(
    where: RepositoryWhereInput
    orderBy: RepositoryOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Repository!]
  gitLogin: String!
  gamesOwned(
    where: GameWhereInput
    orderBy: GameOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Game!]
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!

  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  id: ID
  email: String!
  hash: String!
  name: String
  role: Role
  gitLogin: String!
  keys: AppKeyCreateManyWithoutUserInput
  addedRepositories: RepositoryCreateManyWithoutAddedByInput
  gamesOwned: GameCreateManyWithoutOwnerInput
}

input UserCreateOneWithoutAddedRepositoriesInput {
  create: UserCreateWithoutAddedRepositoriesInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutGamesOwnedInput {
  create: UserCreateWithoutGamesOwnedInput
  connect: UserWhereUniqueInput
}

input UserCreateOneWithoutKeysInput {
  create: UserCreateWithoutKeysInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutAddedRepositoriesInput {
  id: ID
  email: String!
  hash: String!
  name: String
  role: Role
  gitLogin: String!
  keys: AppKeyCreateManyWithoutUserInput
  gamesOwned: GameCreateManyWithoutOwnerInput
}

input UserCreateWithoutGamesOwnedInput {
  id: ID
  email: String!
  hash: String!
  name: String
  role: Role
  gitLogin: String!
  keys: AppKeyCreateManyWithoutUserInput
  addedRepositories: RepositoryCreateManyWithoutAddedByInput
}

input UserCreateWithoutKeysInput {
  id: ID
  email: String!
  hash: String!
  name: String
  role: Role
  gitLogin: String!
  addedRepositories: RepositoryCreateManyWithoutAddedByInput
  gamesOwned: GameCreateManyWithoutOwnerInput
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!

  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  email_ASC
  email_DESC
  hash_ASC
  hash_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  name_ASC
  name_DESC
  role_ASC
  role_DESC
  gitLogin_ASC
  gitLogin_DESC
}

type UserPreviousValues {
  id: ID!
  email: String!
  hash: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  name: String
  role: Role
  gitLogin: String!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserSubscriptionWhereInput!]

  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]

  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String

  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]

  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  email: String
  hash: String
  name: String
  role: Role
  gitLogin: String
  keys: AppKeyUpdateManyWithoutUserInput
  addedRepositories: RepositoryUpdateManyWithoutAddedByInput
  gamesOwned: GameUpdateManyWithoutOwnerInput
}

input UserUpdateManyMutationInput {
  email: String
  hash: String
  name: String
  role: Role
  gitLogin: String
}

input UserUpdateOneRequiredWithoutAddedRepositoriesInput {
  create: UserCreateWithoutAddedRepositoriesInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutAddedRepositoriesDataInput
  upsert: UserUpsertWithoutAddedRepositoriesInput
}

input UserUpdateOneRequiredWithoutGamesOwnedInput {
  create: UserCreateWithoutGamesOwnedInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutGamesOwnedDataInput
  upsert: UserUpsertWithoutGamesOwnedInput
}

input UserUpdateOneRequiredWithoutKeysInput {
  create: UserCreateWithoutKeysInput
  connect: UserWhereUniqueInput
  update: UserUpdateWithoutKeysDataInput
  upsert: UserUpsertWithoutKeysInput
}

input UserUpdateWithoutAddedRepositoriesDataInput {
  email: String
  hash: String
  name: String
  role: Role
  gitLogin: String
  keys: AppKeyUpdateManyWithoutUserInput
  gamesOwned: GameUpdateManyWithoutOwnerInput
}

input UserUpdateWithoutGamesOwnedDataInput {
  email: String
  hash: String
  name: String
  role: Role
  gitLogin: String
  keys: AppKeyUpdateManyWithoutUserInput
  addedRepositories: RepositoryUpdateManyWithoutAddedByInput
}

input UserUpdateWithoutKeysDataInput {
  email: String
  hash: String
  name: String
  role: Role
  gitLogin: String
  addedRepositories: RepositoryUpdateManyWithoutAddedByInput
  gamesOwned: GameUpdateManyWithoutOwnerInput
}

input UserUpsertWithoutAddedRepositoriesInput {
  update: UserUpdateWithoutAddedRepositoriesDataInput!
  create: UserCreateWithoutAddedRepositoriesInput!
}

input UserUpsertWithoutGamesOwnedInput {
  update: UserUpdateWithoutGamesOwnedDataInput!
  create: UserCreateWithoutGamesOwnedInput!
}

input UserUpsertWithoutKeysInput {
  update: UserUpdateWithoutKeysDataInput!
  create: UserCreateWithoutKeysInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]

  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]

  """
  Logical NOT on all given filters combined by AND.
  """
  NOT: [UserWhereInput!]
  id: ID

  """
  All values that are not equal to given value.
  """
  id_not: ID

  """
  All values that are contained in given list.
  """
  id_in: [ID!]

  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]

  """
  All values less than the given value.
  """
  id_lt: ID

  """
  All values less than or equal the given value.
  """
  id_lte: ID

  """
  All values greater than the given value.
  """
  id_gt: ID

  """
  All values greater than or equal the given value.
  """
  id_gte: ID

  """
  All values containing the given string.
  """
  id_contains: ID

  """
  All values not containing the given string.
  """
  id_not_contains: ID

  """
  All values starting with the given string.
  """
  id_starts_with: ID

  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID

  """
  All values ending with the given string.
  """
  id_ends_with: ID

  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  email: String

  """
  All values that are not equal to given value.
  """
  email_not: String

  """
  All values that are contained in given list.
  """
  email_in: [String!]

  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]

  """
  All values less than the given value.
  """
  email_lt: String

  """
  All values less than or equal the given value.
  """
  email_lte: String

  """
  All values greater than the given value.
  """
  email_gt: String

  """
  All values greater than or equal the given value.
  """
  email_gte: String

  """
  All values containing the given string.
  """
  email_contains: String

  """
  All values not containing the given string.
  """
  email_not_contains: String

  """
  All values starting with the given string.
  """
  email_starts_with: String

  """
  All values not starting with the given string.
  """
  email_not_starts_with: String

  """
  All values ending with the given string.
  """
  email_ends_with: String

  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  hash: String

  """
  All values that are not equal to given value.
  """
  hash_not: String

  """
  All values that are contained in given list.
  """
  hash_in: [String!]

  """
  All values that are not contained in given list.
  """
  hash_not_in: [String!]

  """
  All values less than the given value.
  """
  hash_lt: String

  """
  All values less than or equal the given value.
  """
  hash_lte: String

  """
  All values greater than the given value.
  """
  hash_gt: String

  """
  All values greater than or equal the given value.
  """
  hash_gte: String

  """
  All values containing the given string.
  """
  hash_contains: String

  """
  All values not containing the given string.
  """
  hash_not_contains: String

  """
  All values starting with the given string.
  """
  hash_starts_with: String

  """
  All values not starting with the given string.
  """
  hash_not_starts_with: String

  """
  All values ending with the given string.
  """
  hash_ends_with: String

  """
  All values not ending with the given string.
  """
  hash_not_ends_with: String
  createdAt: DateTime

  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime

  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  createdAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime

  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime

  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime

  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]

  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]

  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime

  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime

  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime

  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  name: String

  """
  All values that are not equal to given value.
  """
  name_not: String

  """
  All values that are contained in given list.
  """
  name_in: [String!]

  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]

  """
  All values less than the given value.
  """
  name_lt: String

  """
  All values less than or equal the given value.
  """
  name_lte: String

  """
  All values greater than the given value.
  """
  name_gt: String

  """
  All values greater than or equal the given value.
  """
  name_gte: String

  """
  All values containing the given string.
  """
  name_contains: String

  """
  All values not containing the given string.
  """
  name_not_contains: String

  """
  All values starting with the given string.
  """
  name_starts_with: String

  """
  All values not starting with the given string.
  """
  name_not_starts_with: String

  """
  All values ending with the given string.
  """
  name_ends_with: String

  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  role: Role

  """
  All values that are not equal to given value.
  """
  role_not: Role

  """
  All values that are contained in given list.
  """
  role_in: [Role!]

  """
  All values that are not contained in given list.
  """
  role_not_in: [Role!]
  gitLogin: String

  """
  All values that are not equal to given value.
  """
  gitLogin_not: String

  """
  All values that are contained in given list.
  """
  gitLogin_in: [String!]

  """
  All values that are not contained in given list.
  """
  gitLogin_not_in: [String!]

  """
  All values less than the given value.
  """
  gitLogin_lt: String

  """
  All values less than or equal the given value.
  """
  gitLogin_lte: String

  """
  All values greater than the given value.
  """
  gitLogin_gt: String

  """
  All values greater than or equal the given value.
  """
  gitLogin_gte: String

  """
  All values containing the given string.
  """
  gitLogin_contains: String

  """
  All values not containing the given string.
  """
  gitLogin_not_contains: String

  """
  All values starting with the given string.
  """
  gitLogin_starts_with: String

  """
  All values not starting with the given string.
  """
  gitLogin_not_starts_with: String

  """
  All values ending with the given string.
  """
  gitLogin_ends_with: String

  """
  All values not ending with the given string.
  """
  gitLogin_not_ends_with: String
  keys_every: AppKeyWhereInput
  keys_some: AppKeyWhereInput
  keys_none: AppKeyWhereInput
  addedRepositories_every: RepositoryWhereInput
  addedRepositories_some: RepositoryWhereInput
  addedRepositories_none: RepositoryWhereInput
  gamesOwned_every: GameWhereInput
  gamesOwned_some: GameWhereInput
  gamesOwned_none: GameWhereInput
}

input UserWhereUniqueInput {
  id: ID
  email: String
}
