- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"commit\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), \"author\" uuid NOT NULL, \"committer\" uuid NOT NULL,
      \"additions\" integer NOT NULL, \"authed_date\" timetz NOT NULL, \"changed_files\"
      integer NOT NULL, \"commit_url\" text NOT NULL, \"deletions\" integer NOT NULL,
      \"message\" text NOT NULL, \"message_headline\" text NOT NULL, \"pushed_date\"
      timetz NOT NULL, \"tree_url\" text NOT NULL, \"url\" text NOT NULL, PRIMARY
      KEY (\"id\") , FOREIGN KEY (\"author\") REFERENCES \"public\".\"github_user\"(\"id\")
      ON UPDATE cascade ON DELETE cascade, FOREIGN KEY (\"committer\") REFERENCES
      \"public\".\"github_user\"(\"id\") ON UPDATE cascade ON DELETE cascade); COMMENT
      ON TABLE \"public\".\"commit\" IS E'Repository Commita';\nCREATE OR REPLACE
      FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS TRIGGER
      AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_commit_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"commit\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_commit_updated_at\" ON \"public\".\"commit\" \nIS 'trigger
      to set value of column \"updated_at\" to current timestamp on row update';\n"
  type: run_sql
- args:
    name: commit
    schema: public
  type: add_existing_table_or_view
