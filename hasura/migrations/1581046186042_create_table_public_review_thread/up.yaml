- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"review_thread\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), \"pull_request_id\" uuid NOT NULL, \"repository_id\"
      uuid NOT NULL, \"resolved_by\" uuid, \"is_resolvedd\" boolean NOT NULL, PRIMARY
      KEY (\"id\") , FOREIGN KEY (\"pull_request_id\") REFERENCES \"public\".\"pull_requests\"(\"id\")
      ON UPDATE cascade ON DELETE cascade, FOREIGN KEY (\"repository_id\") REFERENCES
      \"public\".\"repositories\"(\"id\") ON UPDATE cascade ON DELETE cascade, FOREIGN
      KEY (\"resolved_by\") REFERENCES \"public\".\"github_user\"(\"id\") ON UPDATE
      cascade ON DELETE cascade);\nCREATE OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_review_thread_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"review_thread\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_review_thread_updated_at\" ON \"public\".\"review_thread\"
      \nIS 'trigger to set value of column \"updated_at\" to current timestamp on
      row update';\n"
  type: run_sql
- args:
    name: review_thread
    schema: public
  type: add_existing_table_or_view
