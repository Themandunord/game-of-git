- args:
    sql: CREATE EXTENSION IF NOT EXISTS pgcrypto;
  type: run_sql
- args:
    sql: "CREATE TABLE \"public\".\"issues\"(\"id\" uuid NOT NULL DEFAULT gen_random_uuid(),
      \"created_at\" timestamptz NOT NULL DEFAULT now(), \"updated_at\" timestamptz
      NOT NULL DEFAULT now(), \"created_at_external\" timetz NOT NULL, \"updated_at_external\"
      timetz NOT NULL, \"last_edited_at\" timetz NOT NULL, \"author_id\" uuid NOT
      NULL, \"body_text\" text NOT NULL, \"closed\" timetz NOT NULL, \"locked\" boolean
      NOT NULL, \"number\" integer NOT NULL, \"state\" text NOT NULL, \"title\" text
      NOT NULL, \"url\" text NOT NULL, PRIMARY KEY (\"id\") , FOREIGN KEY (\"author_id\")
      REFERENCES \"public\".\"github_user\"(\"id\") ON UPDATE cascade ON DELETE cascade);\nCREATE
      OR REPLACE FUNCTION \"public\".\"set_current_timestamp_updated_at\"()\nRETURNS
      TRIGGER AS $$\nDECLARE\n  _new record;\nBEGIN\n  _new := NEW;\n  _new.\"updated_at\"
      = NOW();\n  RETURN _new;\nEND;\n$$ LANGUAGE plpgsql;\nCREATE TRIGGER \"set_public_issues_updated_at\"\nBEFORE
      UPDATE ON \"public\".\"issues\"\nFOR EACH ROW\nEXECUTE PROCEDURE \"public\".\"set_current_timestamp_updated_at\"();\nCOMMENT
      ON TRIGGER \"set_public_issues_updated_at\" ON \"public\".\"issues\" \nIS 'trigger
      to set value of column \"updated_at\" to current timestamp on row update';\n"
  type: run_sql
- args:
    name: issues
    schema: public
  type: add_existing_table_or_view
